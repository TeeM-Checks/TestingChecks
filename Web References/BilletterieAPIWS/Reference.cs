//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NewBilletterie.BilletterieAPIWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BilletteriePrivateAPISoap", Namespace="http://private.billetterie.sword.za/")]
    public partial class BilletteriePrivateAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieTicketRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTicketResponseDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllowedMimeTypesDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryAttachmentRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProvinceDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieUSERRPKIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTicketsDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidMimeTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketResponseDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketResponseCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketDocumentsDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectTicketResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieOfficerObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieUserObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieOfficerObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieOfficerUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieFAQRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieUserRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieOrganisationRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientBankingDetailsExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBRSDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIDFromTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieIntScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBilletterieTempDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieTemporaryDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieDocumentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieGenericRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieSTRRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieDocumentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieTicketRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieUserRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieOfficerRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieOfficerRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieTempDocumentURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBilletterieSingleTempDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieGenericDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGenericBilletterieDataSetAsynchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieOFCCATRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieCATOFLOFCRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGenericBilletterieRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieSLARecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieCategoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieEscalationRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieCategoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieSTRRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieAMTRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieAMTRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieUSGRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieUSGRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletteriePTYRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletteriePTYRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieTTRRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieTTRRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGenericIPOnlineDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieNoPasswordUserObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieCategoryScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieTicketResponseRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieGenericBoolScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTicketInformationRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieOfficerRecordAOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieOfficerRecordBOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBilletterieUserLogRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieBulkTicketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieTicketStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllTempDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalFileSystemDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieLoginCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncreaseBilletterieUserLoginCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieUserStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOTPValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOTPValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetBilletterieUserLoginCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilletterieOfficerLoginCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncreaseBilletterieOfficerLoginCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBilletterieOfficerStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetBilletterieOfficerLoginCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankingDetailsExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback BankingAccountExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBRSTicketPKIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSBulkCustomerRecordStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerDetailRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCBRSDocumentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSDocumentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSCustomerRecordTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemporaryCBRSDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTempCBRSDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTempCBRSDocumentURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSingleCBRSTempDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllCBRSTempDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSApprovedBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBRSUserIDDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBRSCustomerRefundDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBRSCustomerObjectDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSBulkCustomerTXFRecordStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSERMSTransIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSERMSReinTransIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTFXTextFileStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCBRSTotalBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFlatfileDetailRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertApprovalDetailRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCBRSCustomerRecordStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertErrorLogRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserLogRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEncryptedValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDecryptedValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentCipherKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCUBADataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOracleDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmailRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmailRecordSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQRSEmailSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetERMSAgentProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInformixDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBillingOperationCompleted;
        
        private System.Threading.SendOrPostCallback IPERMSBillingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BilletteriePrivateAPI() {
            this.Url = global::NewBilletterie.Properties.Settings.Default.NewBilletterie_BilletterieAPIWS_BilletteriePrivateAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieTicketRecordCompletedEventHandler InsertBilletterieTicketRecordCompleted;
        
        /// <remarks/>
        public event AddTicketResponseDocumentCompletedEventHandler AddTicketResponseDocumentCompleted;
        
        /// <remarks/>
        public event GetCategoryDatasetCompletedEventHandler GetCategoryDatasetCompleted;
        
        /// <remarks/>
        public event GetAllowedMimeTypesDatasetCompletedEventHandler GetAllowedMimeTypesDatasetCompleted;
        
        /// <remarks/>
        public event GetCategoryAttachmentRequirementCompletedEventHandler GetCategoryAttachmentRequirementCompleted;
        
        /// <remarks/>
        public event GetProvinceDatasetCompletedEventHandler GetProvinceDatasetCompleted;
        
        /// <remarks/>
        public event GetBilletterieUSERRPKIDCompletedEventHandler GetBilletterieUSERRPKIDCompleted;
        
        /// <remarks/>
        public event GetUserTicketsDatasetCompletedEventHandler GetUserTicketsDatasetCompleted;
        
        /// <remarks/>
        public event ValidMimeTypeCompletedEventHandler ValidMimeTypeCompleted;
        
        /// <remarks/>
        public event GetTicketDatasetCompletedEventHandler GetTicketDatasetCompleted;
        
        /// <remarks/>
        public event GetTicketResponseDatasetCompletedEventHandler GetTicketResponseDatasetCompleted;
        
        /// <remarks/>
        public event GetTicketResponseCountCompletedEventHandler GetTicketResponseCountCompleted;
        
        /// <remarks/>
        public event GetTicketDocumentsDatasetCompletedEventHandler GetTicketDocumentsDatasetCompleted;
        
        /// <remarks/>
        public event CloseTicketCompletedEventHandler CloseTicketCompleted;
        
        /// <remarks/>
        public event RejectTicketResponseCompletedEventHandler RejectTicketResponseCompleted;
        
        /// <remarks/>
        public event DeleteTicketCompletedEventHandler DeleteTicketCompleted;
        
        /// <remarks/>
        public event GetBilletterieDataSetCompletedEventHandler GetBilletterieDataSetCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieRecordCompletedEventHandler UpdateBilletterieRecordCompleted;
        
        /// <remarks/>
        public event GetBilletterieOfficerObjectCompletedEventHandler GetBilletterieOfficerObjectCompleted;
        
        /// <remarks/>
        public event GetBilletterieUserObjectCompletedEventHandler GetBilletterieUserObjectCompleted;
        
        /// <remarks/>
        public event GetBilletterieOfficerObjectIDCompletedEventHandler GetBilletterieOfficerObjectIDCompleted;
        
        /// <remarks/>
        public event GetBilletterieOfficerUsernameCompletedEventHandler GetBilletterieOfficerUsernameCompleted;
        
        /// <remarks/>
        public event InsertBilletterieFAQRecordCompletedEventHandler InsertBilletterieFAQRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieUserRecordCompletedEventHandler InsertBilletterieUserRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieOrganisationRecordCompletedEventHandler InsertBilletterieOrganisationRecordCompleted;
        
        /// <remarks/>
        public event GetBilletterieScalarCompletedEventHandler GetBilletterieScalarCompleted;
        
        /// <remarks/>
        public event ClientBankingDetailsExistCompletedEventHandler ClientBankingDetailsExistCompleted;
        
        /// <remarks/>
        public event GetCBRSDataSetCompletedEventHandler GetCBRSDataSetCompleted;
        
        /// <remarks/>
        public event GetUserIDFromTicketCompletedEventHandler GetUserIDFromTicketCompleted;
        
        /// <remarks/>
        public event GetBilletterieIntScalarCompletedEventHandler GetBilletterieIntScalarCompleted;
        
        /// <remarks/>
        public event AddBilletterieTempDocumentCompletedEventHandler AddBilletterieTempDocumentCompleted;
        
        /// <remarks/>
        public event GetBilletterieTemporaryDocumentsCompletedEventHandler GetBilletterieTemporaryDocumentsCompleted;
        
        /// <remarks/>
        public event InsertBilletterieDocumentRecordCompletedEventHandler InsertBilletterieDocumentRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieGenericRecordCompletedEventHandler InsertBilletterieGenericRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieSTRRecordCompletedEventHandler InsertBilletterieSTRRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieDocumentRecordCompletedEventHandler UpdateBilletterieDocumentRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieTicketRecordCompletedEventHandler UpdateBilletterieTicketRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieUserRecordCompletedEventHandler UpdateBilletterieUserRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieOfficerRecordCompletedEventHandler InsertBilletterieOfficerRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieOfficerRecordCompletedEventHandler UpdateBilletterieOfficerRecordCompleted;
        
        /// <remarks/>
        public event GetBilletterieTempDocumentURLCompletedEventHandler GetBilletterieTempDocumentURLCompleted;
        
        /// <remarks/>
        public event DeleteBilletterieSingleTempDocumentsCompletedEventHandler DeleteBilletterieSingleTempDocumentsCompleted;
        
        /// <remarks/>
        public event GetBilletterieGenericDataTableCompletedEventHandler GetBilletterieGenericDataTableCompleted;
        
        /// <remarks/>
        public event GetGenericBilletterieDataSetAsynchCompletedEventHandler GetGenericBilletterieDataSetAsynchCompleted;
        
        /// <remarks/>
        public event InsertBilletterieOFCCATRecordCompletedEventHandler InsertBilletterieOFCCATRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieCATOFLOFCRecordCompletedEventHandler InsertBilletterieCATOFLOFCRecordCompleted;
        
        /// <remarks/>
        public event DeleteGenericBilletterieRecordCompletedEventHandler DeleteGenericBilletterieRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieSLARecordCompletedEventHandler InsertBilletterieSLARecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieCategoryRecordCompletedEventHandler UpdateBilletterieCategoryRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieEscalationRecordCompletedEventHandler InsertBilletterieEscalationRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieCategoryRecordCompletedEventHandler InsertBilletterieCategoryRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieSTRRecordCompletedEventHandler UpdateBilletterieSTRRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieAMTRecordCompletedEventHandler InsertBilletterieAMTRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieAMTRecordCompletedEventHandler UpdateBilletterieAMTRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieUSGRecordCompletedEventHandler InsertBilletterieUSGRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieUSGRecordCompletedEventHandler UpdateBilletterieUSGRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletteriePTYRecordCompletedEventHandler InsertBilletteriePTYRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletteriePTYRecordCompletedEventHandler UpdateBilletteriePTYRecordCompleted;
        
        /// <remarks/>
        public event InsertBilletterieTTRRecordCompletedEventHandler InsertBilletterieTTRRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieTTRRecordCompletedEventHandler UpdateBilletterieTTRRecordCompleted;
        
        /// <remarks/>
        public event GetGenericIPOnlineDataSetCompletedEventHandler GetGenericIPOnlineDataSetCompleted;
        
        /// <remarks/>
        public event GetBilletterieNoPasswordUserObjectCompletedEventHandler GetBilletterieNoPasswordUserObjectCompleted;
        
        /// <remarks/>
        public event GetBilletterieCategoryScalarCompletedEventHandler GetBilletterieCategoryScalarCompleted;
        
        /// <remarks/>
        public event InsertBilletterieTicketResponseRecordCompletedEventHandler InsertBilletterieTicketResponseRecordCompleted;
        
        /// <remarks/>
        public event GetBilletterieGenericBoolScalarCompletedEventHandler GetBilletterieGenericBoolScalarCompleted;
        
        /// <remarks/>
        public event InsertTicketInformationRecordCompletedEventHandler InsertTicketInformationRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieOfficerRecordACompletedEventHandler UpdateBilletterieOfficerRecordACompleted;
        
        /// <remarks/>
        public event UpdateBilletterieOfficerRecordBCompletedEventHandler UpdateBilletterieOfficerRecordBCompleted;
        
        /// <remarks/>
        public event InsertBilletterieUserLogRecordCompletedEventHandler InsertBilletterieUserLogRecordCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieBulkTicketStatusCompletedEventHandler UpdateBilletterieBulkTicketStatusCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieTicketStatusCompletedEventHandler UpdateBilletterieTicketStatusCompleted;
        
        /// <remarks/>
        public event GetEmailAccountCompletedEventHandler GetEmailAccountCompleted;
        
        /// <remarks/>
        public event DeleteAllTempDocumentsCompletedEventHandler DeleteAllTempDocumentsCompleted;
        
        /// <remarks/>
        public event GetLocalFileSystemDocumentCompletedEventHandler GetLocalFileSystemDocumentCompleted;
        
        /// <remarks/>
        public event GetBilletterieLoginCountCompletedEventHandler GetBilletterieLoginCountCompleted;
        
        /// <remarks/>
        public event IncreaseBilletterieUserLoginCountCompletedEventHandler IncreaseBilletterieUserLoginCountCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieUserStatusCompletedEventHandler UpdateBilletterieUserStatusCompleted;
        
        /// <remarks/>
        public event CreateOTPValueCompletedEventHandler CreateOTPValueCompleted;
        
        /// <remarks/>
        public event GetUserOTPValueCompletedEventHandler GetUserOTPValueCompleted;
        
        /// <remarks/>
        public event ResetBilletterieUserLoginCountCompletedEventHandler ResetBilletterieUserLoginCountCompleted;
        
        /// <remarks/>
        public event GetBilletterieOfficerLoginCountCompletedEventHandler GetBilletterieOfficerLoginCountCompleted;
        
        /// <remarks/>
        public event IncreaseBilletterieOfficerLoginCountCompletedEventHandler IncreaseBilletterieOfficerLoginCountCompleted;
        
        /// <remarks/>
        public event UpdateBilletterieOfficerStatusCompletedEventHandler UpdateBilletterieOfficerStatusCompleted;
        
        /// <remarks/>
        public event ResetBilletterieOfficerLoginCountCompletedEventHandler ResetBilletterieOfficerLoginCountCompleted;
        
        /// <remarks/>
        public event BankingDetailsExistCompletedEventHandler BankingDetailsExistCompleted;
        
        /// <remarks/>
        public event BankingAccountExistCompletedEventHandler BankingAccountExistCompleted;
        
        /// <remarks/>
        public event GetCBRSTicketPKIDCompletedEventHandler GetCBRSTicketPKIDCompleted;
        
        /// <remarks/>
        public event UpdateCBRSBulkCustomerRecordStatusCompletedEventHandler UpdateCBRSBulkCustomerRecordStatusCompleted;
        
        /// <remarks/>
        public event InsertCustomerDetailRecordCompletedEventHandler InsertCustomerDetailRecordCompleted;
        
        /// <remarks/>
        public event InsertCBRSDocumentRecordCompletedEventHandler InsertCBRSDocumentRecordCompleted;
        
        /// <remarks/>
        public event UpdateCBRSDocumentRecordCompletedEventHandler UpdateCBRSDocumentRecordCompleted;
        
        /// <remarks/>
        public event UpdateCBRSCustomerRecordTicketCompletedEventHandler UpdateCBRSCustomerRecordTicketCompleted;
        
        /// <remarks/>
        public event GetTemporaryCBRSDocumentsCompletedEventHandler GetTemporaryCBRSDocumentsCompleted;
        
        /// <remarks/>
        public event AddTempCBRSDocumentCompletedEventHandler AddTempCBRSDocumentCompleted;
        
        /// <remarks/>
        public event GetTempCBRSDocumentURLCompletedEventHandler GetTempCBRSDocumentURLCompleted;
        
        /// <remarks/>
        public event DeleteSingleCBRSTempDocumentsCompletedEventHandler DeleteSingleCBRSTempDocumentsCompleted;
        
        /// <remarks/>
        public event DeleteAllCBRSTempDocumentsCompletedEventHandler DeleteAllCBRSTempDocumentsCompleted;
        
        /// <remarks/>
        public event UpdateCBRSApprovedBalanceCompletedEventHandler UpdateCBRSApprovedBalanceCompleted;
        
        /// <remarks/>
        public event GetCBRSUserIDDataSetCompletedEventHandler GetCBRSUserIDDataSetCompleted;
        
        /// <remarks/>
        public event GetCBRSCustomerRefundDataSetCompletedEventHandler GetCBRSCustomerRefundDataSetCompleted;
        
        /// <remarks/>
        public event GetCBRSCustomerObjectDataSetCompletedEventHandler GetCBRSCustomerObjectDataSetCompleted;
        
        /// <remarks/>
        public event UpdateCBRSBulkCustomerTXFRecordStatusCompletedEventHandler UpdateCBRSBulkCustomerTXFRecordStatusCompleted;
        
        /// <remarks/>
        public event UpdateCBRSERMSTransIDCompletedEventHandler UpdateCBRSERMSTransIDCompleted;
        
        /// <remarks/>
        public event UpdateCBRSERMSReinTransIDCompletedEventHandler UpdateCBRSERMSReinTransIDCompleted;
        
        /// <remarks/>
        public event UpdateTFXTextFileStatusCompletedEventHandler UpdateTFXTextFileStatusCompleted;
        
        /// <remarks/>
        public event GetCBRSTotalBalanceCompletedEventHandler GetCBRSTotalBalanceCompleted;
        
        /// <remarks/>
        public event InsertFlatfileDetailRecordCompletedEventHandler InsertFlatfileDetailRecordCompleted;
        
        /// <remarks/>
        public event InsertApprovalDetailRecordCompletedEventHandler InsertApprovalDetailRecordCompleted;
        
        /// <remarks/>
        public event UpdateCBRSCustomerRecordStatusCompletedEventHandler UpdateCBRSCustomerRecordStatusCompleted;
        
        /// <remarks/>
        public event InsertErrorLogRecordCompletedEventHandler InsertErrorLogRecordCompleted;
        
        /// <remarks/>
        public event AddUserLogRecordCompletedEventHandler AddUserLogRecordCompleted;
        
        /// <remarks/>
        public event GetEncryptedValueCompletedEventHandler GetEncryptedValueCompleted;
        
        /// <remarks/>
        public event GetDecryptedValueCompletedEventHandler GetDecryptedValueCompleted;
        
        /// <remarks/>
        public event GetCurrentCipherKeyCompletedEventHandler GetCurrentCipherKeyCompleted;
        
        /// <remarks/>
        public event GetCUBADataSetCompletedEventHandler GetCUBADataSetCompleted;
        
        /// <remarks/>
        public event GetOracleDataSetCompletedEventHandler GetOracleDataSetCompleted;
        
        /// <remarks/>
        public event AddEmailRecordCompletedEventHandler AddEmailRecordCompleted;
        
        /// <remarks/>
        public event AddEmailRecordSupportCompletedEventHandler AddEmailRecordSupportCompleted;
        
        /// <remarks/>
        public event GetQRSEmailSettingsCompletedEventHandler GetQRSEmailSettingsCompleted;
        
        /// <remarks/>
        public event GetAgentBalanceCompletedEventHandler GetAgentBalanceCompleted;
        
        /// <remarks/>
        public event GetAgentAccountCompletedEventHandler GetAgentAccountCompleted;
        
        /// <remarks/>
        public event GetERMSAgentProfileCompletedEventHandler GetERMSAgentProfileCompleted;
        
        /// <remarks/>
        public event GetDocumentRefCompletedEventHandler GetDocumentRefCompleted;
        
        /// <remarks/>
        public event GetInformixDataSetCompletedEventHandler GetInformixDataSetCompleted;
        
        /// <remarks/>
        public event CheckBillingCompletedEventHandler CheckBillingCompleted;
        
        /// <remarks/>
        public event IPERMSBillingCompletedEventHandler IPERMSBillingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/ChangeUserPassword", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject ChangeUserPassword(string ofc_username, string ofc_password, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        ofc_username,
                        ofc_password,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string ofc_username, string ofc_password, string apiUserName, string apiUserPassword, string serviceKey) {
            this.ChangeUserPasswordAsync(ofc_username, ofc_password, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string ofc_username, string ofc_password, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        ofc_username,
                        ofc_password,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieTicketRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieTicketRecord(ticketObject p_ticket, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieTicketRecord", new object[] {
                        p_ticket,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieTicketRecordAsync(ticketObject p_ticket, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieTicketRecordAsync(p_ticket, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieTicketRecordAsync(ticketObject p_ticket, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieTicketRecordOperationCompleted == null)) {
                this.InsertBilletterieTicketRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieTicketRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieTicketRecord", new object[] {
                        p_ticket,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieTicketRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieTicketRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieTicketRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieTicketRecordCompleted(this, new InsertBilletterieTicketRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/AddTicketResponseDocument", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject AddTicketResponseDocument(fileAttachmentObject ticketRespDocument, ticketResponseObject tickRespObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("AddTicketResponseDocument", new object[] {
                        ticketRespDocument,
                        tickRespObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void AddTicketResponseDocumentAsync(fileAttachmentObject ticketRespDocument, ticketResponseObject tickRespObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.AddTicketResponseDocumentAsync(ticketRespDocument, tickRespObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void AddTicketResponseDocumentAsync(fileAttachmentObject ticketRespDocument, ticketResponseObject tickRespObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.AddTicketResponseDocumentOperationCompleted == null)) {
                this.AddTicketResponseDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTicketResponseDocumentOperationCompleted);
            }
            this.InvokeAsync("AddTicketResponseDocument", new object[] {
                        ticketRespDocument,
                        tickRespObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.AddTicketResponseDocumentOperationCompleted, userState);
        }
        
        private void OnAddTicketResponseDocumentOperationCompleted(object arg) {
            if ((this.AddTicketResponseDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTicketResponseDocumentCompleted(this, new AddTicketResponseDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCategoryDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategoryDataset(string deptPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCategoryDataset", new object[] {
                        deptPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryDatasetAsync(string deptPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCategoryDatasetAsync(deptPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCategoryDatasetAsync(string deptPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCategoryDatasetOperationCompleted == null)) {
                this.GetCategoryDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryDatasetOperationCompleted);
            }
            this.InvokeAsync("GetCategoryDataset", new object[] {
                        deptPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCategoryDatasetOperationCompleted, userState);
        }
        
        private void OnGetCategoryDatasetOperationCompleted(object arg) {
            if ((this.GetCategoryDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryDatasetCompleted(this, new GetCategoryDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetAllowedMimeTypesDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllowedMimeTypesDataset(string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetAllowedMimeTypesDataset", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllowedMimeTypesDatasetAsync(string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetAllowedMimeTypesDatasetAsync(apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetAllowedMimeTypesDatasetAsync(string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetAllowedMimeTypesDatasetOperationCompleted == null)) {
                this.GetAllowedMimeTypesDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllowedMimeTypesDatasetOperationCompleted);
            }
            this.InvokeAsync("GetAllowedMimeTypesDataset", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetAllowedMimeTypesDatasetOperationCompleted, userState);
        }
        
        private void OnGetAllowedMimeTypesDatasetOperationCompleted(object arg) {
            if ((this.GetAllowedMimeTypesDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllowedMimeTypesDatasetCompleted(this, new GetAllowedMimeTypesDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCategoryAttachmentRequirement", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCategoryAttachmentRequirement(int catPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCategoryAttachmentRequirement", new object[] {
                        catPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryAttachmentRequirementAsync(int catPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCategoryAttachmentRequirementAsync(catPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCategoryAttachmentRequirementAsync(int catPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCategoryAttachmentRequirementOperationCompleted == null)) {
                this.GetCategoryAttachmentRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryAttachmentRequirementOperationCompleted);
            }
            this.InvokeAsync("GetCategoryAttachmentRequirement", new object[] {
                        catPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCategoryAttachmentRequirementOperationCompleted, userState);
        }
        
        private void OnGetCategoryAttachmentRequirementOperationCompleted(object arg) {
            if ((this.GetCategoryAttachmentRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryAttachmentRequirementCompleted(this, new GetCategoryAttachmentRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetProvinceDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProvinceDataset(string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetProvinceDataset", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProvinceDatasetAsync(string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetProvinceDatasetAsync(apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetProvinceDatasetAsync(string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetProvinceDatasetOperationCompleted == null)) {
                this.GetProvinceDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvinceDatasetOperationCompleted);
            }
            this.InvokeAsync("GetProvinceDataset", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetProvinceDatasetOperationCompleted, userState);
        }
        
        private void OnGetProvinceDatasetOperationCompleted(object arg) {
            if ((this.GetProvinceDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProvinceDatasetCompleted(this, new GetProvinceDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieUSERRPKID", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBilletterieUSERRPKID(string username, string userPasword, string userSource, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieUSERRPKID", new object[] {
                        username,
                        userPasword,
                        userSource,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieUSERRPKIDAsync(string username, string userPasword, string userSource, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieUSERRPKIDAsync(username, userPasword, userSource, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieUSERRPKIDAsync(string username, string userPasword, string userSource, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieUSERRPKIDOperationCompleted == null)) {
                this.GetBilletterieUSERRPKIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieUSERRPKIDOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieUSERRPKID", new object[] {
                        username,
                        userPasword,
                        userSource,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieUSERRPKIDOperationCompleted, userState);
        }
        
        private void OnGetBilletterieUSERRPKIDOperationCompleted(object arg) {
            if ((this.GetBilletterieUSERRPKIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieUSERRPKIDCompleted(this, new GetBilletterieUSERRPKIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetUserTicketsDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserTicketsDataset(string userPKID, bool viewOpenOnly, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetUserTicketsDataset", new object[] {
                        userPKID,
                        viewOpenOnly,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTicketsDatasetAsync(string userPKID, bool viewOpenOnly, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetUserTicketsDatasetAsync(userPKID, viewOpenOnly, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetUserTicketsDatasetAsync(string userPKID, bool viewOpenOnly, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetUserTicketsDatasetOperationCompleted == null)) {
                this.GetUserTicketsDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTicketsDatasetOperationCompleted);
            }
            this.InvokeAsync("GetUserTicketsDataset", new object[] {
                        userPKID,
                        viewOpenOnly,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetUserTicketsDatasetOperationCompleted, userState);
        }
        
        private void OnGetUserTicketsDatasetOperationCompleted(object arg) {
            if ((this.GetUserTicketsDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTicketsDatasetCompleted(this, new GetUserTicketsDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/ValidMimeType", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidMimeType(string mimeType, string fileExtention, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("ValidMimeType", new object[] {
                        mimeType,
                        fileExtention,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidMimeTypeAsync(string mimeType, string fileExtention, string apiUserName, string apiUserPassword, string serviceKey) {
            this.ValidMimeTypeAsync(mimeType, fileExtention, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void ValidMimeTypeAsync(string mimeType, string fileExtention, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.ValidMimeTypeOperationCompleted == null)) {
                this.ValidMimeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidMimeTypeOperationCompleted);
            }
            this.InvokeAsync("ValidMimeType", new object[] {
                        mimeType,
                        fileExtention,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.ValidMimeTypeOperationCompleted, userState);
        }
        
        private void OnValidMimeTypeOperationCompleted(object arg) {
            if ((this.ValidMimeTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidMimeTypeCompleted(this, new ValidMimeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetTicketDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTicketDataset(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetTicketDataset", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketDatasetAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetTicketDatasetAsync(ticketPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetTicketDatasetAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetTicketDatasetOperationCompleted == null)) {
                this.GetTicketDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketDatasetOperationCompleted);
            }
            this.InvokeAsync("GetTicketDataset", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetTicketDatasetOperationCompleted, userState);
        }
        
        private void OnGetTicketDatasetOperationCompleted(object arg) {
            if ((this.GetTicketDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketDatasetCompleted(this, new GetTicketDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetTicketResponseDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTicketResponseDataset(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetTicketResponseDataset", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketResponseDatasetAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetTicketResponseDatasetAsync(ticketPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetTicketResponseDatasetAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetTicketResponseDatasetOperationCompleted == null)) {
                this.GetTicketResponseDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketResponseDatasetOperationCompleted);
            }
            this.InvokeAsync("GetTicketResponseDataset", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetTicketResponseDatasetOperationCompleted, userState);
        }
        
        private void OnGetTicketResponseDatasetOperationCompleted(object arg) {
            if ((this.GetTicketResponseDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketResponseDatasetCompleted(this, new GetTicketResponseDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetTicketResponseCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTicketResponseCount(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetTicketResponseCount", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketResponseCountAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetTicketResponseCountAsync(ticketPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetTicketResponseCountAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetTicketResponseCountOperationCompleted == null)) {
                this.GetTicketResponseCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketResponseCountOperationCompleted);
            }
            this.InvokeAsync("GetTicketResponseCount", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetTicketResponseCountOperationCompleted, userState);
        }
        
        private void OnGetTicketResponseCountOperationCompleted(object arg) {
            if ((this.GetTicketResponseCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketResponseCountCompleted(this, new GetTicketResponseCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetTicketDocumentsDataset", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTicketDocumentsDataset(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetTicketDocumentsDataset", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketDocumentsDatasetAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetTicketDocumentsDatasetAsync(ticketPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetTicketDocumentsDatasetAsync(string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetTicketDocumentsDatasetOperationCompleted == null)) {
                this.GetTicketDocumentsDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketDocumentsDatasetOperationCompleted);
            }
            this.InvokeAsync("GetTicketDocumentsDataset", new object[] {
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetTicketDocumentsDatasetOperationCompleted, userState);
        }
        
        private void OnGetTicketDocumentsDatasetOperationCompleted(object arg) {
            if ((this.GetTicketDocumentsDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketDocumentsDatasetCompleted(this, new GetTicketDocumentsDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/CloseTicket", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject CloseTicket(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("CloseTicket", new object[] {
                        ticketNumberPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void CloseTicketAsync(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.CloseTicketAsync(ticketNumberPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void CloseTicketAsync(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.CloseTicketOperationCompleted == null)) {
                this.CloseTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseTicketOperationCompleted);
            }
            this.InvokeAsync("CloseTicket", new object[] {
                        ticketNumberPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.CloseTicketOperationCompleted, userState);
        }
        
        private void OnCloseTicketOperationCompleted(object arg) {
            if ((this.CloseTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseTicketCompleted(this, new CloseTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/RejectTicketResponse", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject RejectTicketResponse(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("RejectTicketResponse", new object[] {
                        ticketNumberPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void RejectTicketResponseAsync(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.RejectTicketResponseAsync(ticketNumberPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void RejectTicketResponseAsync(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.RejectTicketResponseOperationCompleted == null)) {
                this.RejectTicketResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectTicketResponseOperationCompleted);
            }
            this.InvokeAsync("RejectTicketResponse", new object[] {
                        ticketNumberPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.RejectTicketResponseOperationCompleted, userState);
        }
        
        private void OnRejectTicketResponseOperationCompleted(object arg) {
            if ((this.RejectTicketResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectTicketResponseCompleted(this, new RejectTicketResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/DeleteTicket", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject DeleteTicket(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("DeleteTicket", new object[] {
                        ticketNumberPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTicketAsync(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.DeleteTicketAsync(ticketNumberPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void DeleteTicketAsync(string ticketNumberPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.DeleteTicketOperationCompleted == null)) {
                this.DeleteTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTicketOperationCompleted);
            }
            this.InvokeAsync("DeleteTicket", new object[] {
                        ticketNumberPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.DeleteTicketOperationCompleted, userState);
        }
        
        private void OnDeleteTicketOperationCompleted(object arg) {
            if ((this.DeleteTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTicketCompleted(this, new DeleteTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieDataSet(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieDataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieDataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieDataSetAsync(selectStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieDataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieDataSetOperationCompleted == null)) {
                this.GetBilletterieDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieDataSetOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieDataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieDataSetOperationCompleted, userState);
        }
        
        private void OnGetBilletterieDataSetOperationCompleted(object arg) {
            if ((this.GetBilletterieDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieDataSetCompleted(this, new GetBilletterieDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieRecord(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieRecord", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieRecordAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieRecordAsync(selectStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieRecordAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieRecordOperationCompleted == null)) {
                this.UpdateBilletterieRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieRecord", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieRecordCompleted(this, new UpdateBilletterieRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieOfficerObject", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieOfficerObject(string userName, string userPassword, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieOfficerObject", new object[] {
                        userName,
                        userPassword,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerObjectAsync(string userName, string userPassword, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieOfficerObjectAsync(userName, userPassword, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerObjectAsync(string userName, string userPassword, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieOfficerObjectOperationCompleted == null)) {
                this.GetBilletterieOfficerObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieOfficerObjectOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieOfficerObject", new object[] {
                        userName,
                        userPassword,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieOfficerObjectOperationCompleted, userState);
        }
        
        private void OnGetBilletterieOfficerObjectOperationCompleted(object arg) {
            if ((this.GetBilletterieOfficerObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieOfficerObjectCompleted(this, new GetBilletterieOfficerObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieUserObject", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieUserObject(string userName, string userPassword, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieUserObject", new object[] {
                        userName,
                        userPassword,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieUserObjectAsync(string userName, string userPassword, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieUserObjectAsync(userName, userPassword, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieUserObjectAsync(string userName, string userPassword, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieUserObjectOperationCompleted == null)) {
                this.GetBilletterieUserObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieUserObjectOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieUserObject", new object[] {
                        userName,
                        userPassword,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieUserObjectOperationCompleted, userState);
        }
        
        private void OnGetBilletterieUserObjectOperationCompleted(object arg) {
            if ((this.GetBilletterieUserObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieUserObjectCompleted(this, new GetBilletterieUserObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieOfficerObjectID", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieOfficerObjectID(string userUniqueID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieOfficerObjectID", new object[] {
                        userUniqueID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerObjectIDAsync(string userUniqueID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieOfficerObjectIDAsync(userUniqueID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerObjectIDAsync(string userUniqueID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieOfficerObjectIDOperationCompleted == null)) {
                this.GetBilletterieOfficerObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieOfficerObjectIDOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieOfficerObjectID", new object[] {
                        userUniqueID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieOfficerObjectIDOperationCompleted, userState);
        }
        
        private void OnGetBilletterieOfficerObjectIDOperationCompleted(object arg) {
            if ((this.GetBilletterieOfficerObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieOfficerObjectIDCompleted(this, new GetBilletterieOfficerObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieOfficerUsername", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieOfficerUsername(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieOfficerUsername", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerUsernameAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieOfficerUsernameAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerUsernameAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieOfficerUsernameOperationCompleted == null)) {
                this.GetBilletterieOfficerUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieOfficerUsernameOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieOfficerUsername", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieOfficerUsernameOperationCompleted, userState);
        }
        
        private void OnGetBilletterieOfficerUsernameOperationCompleted(object arg) {
            if ((this.GetBilletterieOfficerUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieOfficerUsernameCompleted(this, new GetBilletterieOfficerUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieFAQRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieFAQRecord(faqObject FAQObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieFAQRecord", new object[] {
                        FAQObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieFAQRecordAsync(faqObject FAQObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieFAQRecordAsync(FAQObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieFAQRecordAsync(faqObject FAQObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieFAQRecordOperationCompleted == null)) {
                this.InsertBilletterieFAQRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieFAQRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieFAQRecord", new object[] {
                        FAQObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieFAQRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieFAQRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieFAQRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieFAQRecordCompleted(this, new InsertBilletterieFAQRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieUserRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieUserRecord(userProfileObject p_userObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieUserRecord", new object[] {
                        p_userObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieUserRecordAsync(userProfileObject p_userObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieUserRecordAsync(p_userObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieUserRecordAsync(userProfileObject p_userObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieUserRecordOperationCompleted == null)) {
                this.InsertBilletterieUserRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieUserRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieUserRecord", new object[] {
                        p_userObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieUserRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieUserRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieUserRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieUserRecordCompleted(this, new InsertBilletterieUserRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieOrganisationRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieOrganisationRecord(organisationObject p_ogaObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieOrganisationRecord", new object[] {
                        p_ogaObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieOrganisationRecordAsync(organisationObject p_ogaObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieOrganisationRecordAsync(p_ogaObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieOrganisationRecordAsync(organisationObject p_ogaObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieOrganisationRecordOperationCompleted == null)) {
                this.InsertBilletterieOrganisationRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieOrganisationRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieOrganisationRecord", new object[] {
                        p_ogaObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieOrganisationRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieOrganisationRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieOrganisationRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieOrganisationRecordCompleted(this, new InsertBilletterieOrganisationRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieScalar", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectStringResponseObject GetBilletterieScalar(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieScalar", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((SelectStringResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieScalarAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieScalarAsync(sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieScalarAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieScalarOperationCompleted == null)) {
                this.GetBilletterieScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieScalarOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieScalar", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieScalarOperationCompleted, userState);
        }
        
        private void OnGetBilletterieScalarOperationCompleted(object arg) {
            if ((this.GetBilletterieScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieScalarCompleted(this, new GetBilletterieScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/ClientBankingDetailsExist", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectBoolResponseObject ClientBankingDetailsExist(string agentCode, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("ClientBankingDetailsExist", new object[] {
                        agentCode,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((SelectBoolResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void ClientBankingDetailsExistAsync(string agentCode, string apiUserName, string apiUserPassword, string serviceKey) {
            this.ClientBankingDetailsExistAsync(agentCode, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void ClientBankingDetailsExistAsync(string agentCode, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.ClientBankingDetailsExistOperationCompleted == null)) {
                this.ClientBankingDetailsExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientBankingDetailsExistOperationCompleted);
            }
            this.InvokeAsync("ClientBankingDetailsExist", new object[] {
                        agentCode,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.ClientBankingDetailsExistOperationCompleted, userState);
        }
        
        private void OnClientBankingDetailsExistOperationCompleted(object arg) {
            if ((this.ClientBankingDetailsExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientBankingDetailsExistCompleted(this, new ClientBankingDetailsExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCBRSDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCBRSDataSet(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCBRSDataSet", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBRSDataSetAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCBRSDataSetAsync(sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCBRSDataSetAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCBRSDataSetOperationCompleted == null)) {
                this.GetCBRSDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBRSDataSetOperationCompleted);
            }
            this.InvokeAsync("GetCBRSDataSet", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCBRSDataSetOperationCompleted, userState);
        }
        
        private void OnGetCBRSDataSetOperationCompleted(object arg) {
            if ((this.GetCBRSDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBRSDataSetCompleted(this, new GetCBRSDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetUserIDFromTicket", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserIDFromTicket(string tckPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetUserIDFromTicket", new object[] {
                        tckPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIDFromTicketAsync(string tckPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetUserIDFromTicketAsync(tckPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetUserIDFromTicketAsync(string tckPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetUserIDFromTicketOperationCompleted == null)) {
                this.GetUserIDFromTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDFromTicketOperationCompleted);
            }
            this.InvokeAsync("GetUserIDFromTicket", new object[] {
                        tckPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetUserIDFromTicketOperationCompleted, userState);
        }
        
        private void OnGetUserIDFromTicketOperationCompleted(object arg) {
            if ((this.GetUserIDFromTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDFromTicketCompleted(this, new GetUserIDFromTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieIntScalar", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectStringResponseObject GetBilletterieIntScalar(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieIntScalar", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((SelectStringResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieIntScalarAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieIntScalarAsync(sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieIntScalarAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieIntScalarOperationCompleted == null)) {
                this.GetBilletterieIntScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieIntScalarOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieIntScalar", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieIntScalarOperationCompleted, userState);
        }
        
        private void OnGetBilletterieIntScalarOperationCompleted(object arg) {
            if ((this.GetBilletterieIntScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieIntScalarCompleted(this, new GetBilletterieIntScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/AddBilletterieTempDocument", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject AddBilletterieTempDocument(fileAttachmentObject tempDocumentObject, string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("AddBilletterieTempDocument", new object[] {
                        tempDocumentObject,
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void AddBilletterieTempDocumentAsync(fileAttachmentObject tempDocumentObject, string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            this.AddBilletterieTempDocumentAsync(tempDocumentObject, userPKID, userType, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void AddBilletterieTempDocumentAsync(fileAttachmentObject tempDocumentObject, string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.AddBilletterieTempDocumentOperationCompleted == null)) {
                this.AddBilletterieTempDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBilletterieTempDocumentOperationCompleted);
            }
            this.InvokeAsync("AddBilletterieTempDocument", new object[] {
                        tempDocumentObject,
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.AddBilletterieTempDocumentOperationCompleted, userState);
        }
        
        private void OnAddBilletterieTempDocumentOperationCompleted(object arg) {
            if ((this.AddBilletterieTempDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBilletterieTempDocumentCompleted(this, new AddBilletterieTempDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieTemporaryDocuments", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieTemporaryDocuments(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieTemporaryDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieTemporaryDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieTemporaryDocumentsAsync(userPKID, userType, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieTemporaryDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieTemporaryDocumentsOperationCompleted == null)) {
                this.GetBilletterieTemporaryDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieTemporaryDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieTemporaryDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieTemporaryDocumentsOperationCompleted, userState);
        }
        
        private void OnGetBilletterieTemporaryDocumentsOperationCompleted(object arg) {
            if ((this.GetBilletterieTemporaryDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieTemporaryDocumentsCompleted(this, new GetBilletterieTemporaryDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieDocumentRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieDocumentRecord(fileAttachmentObject p_document, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieDocumentRecord", new object[] {
                        p_document,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieDocumentRecordAsync(fileAttachmentObject p_document, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieDocumentRecordAsync(p_document, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieDocumentRecordAsync(fileAttachmentObject p_document, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieDocumentRecordOperationCompleted == null)) {
                this.InsertBilletterieDocumentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieDocumentRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieDocumentRecord", new object[] {
                        p_document,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieDocumentRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieDocumentRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieDocumentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieDocumentRecordCompleted(this, new InsertBilletterieDocumentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieGenericRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public lOperationResponse InsertBilletterieGenericRecord(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieGenericRecord", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((lOperationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieGenericRecordAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieGenericRecordAsync(sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieGenericRecordAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieGenericRecordOperationCompleted == null)) {
                this.InsertBilletterieGenericRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieGenericRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieGenericRecord", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieGenericRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieGenericRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieGenericRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieGenericRecordCompleted(this, new InsertBilletterieGenericRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieSTRRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieSTRRecord(templateObject responseTemplateObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieSTRRecord", new object[] {
                        responseTemplateObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieSTRRecordAsync(templateObject responseTemplateObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieSTRRecordAsync(responseTemplateObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieSTRRecordAsync(templateObject responseTemplateObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieSTRRecordOperationCompleted == null)) {
                this.InsertBilletterieSTRRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieSTRRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieSTRRecord", new object[] {
                        responseTemplateObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieSTRRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieSTRRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieSTRRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieSTRRecordCompleted(this, new InsertBilletterieSTRRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieDocumentRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieDocumentRecord(string documentPKID, string documentPath, string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieDocumentRecord", new object[] {
                        documentPKID,
                        documentPath,
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieDocumentRecordAsync(string documentPKID, string documentPath, string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieDocumentRecordAsync(documentPKID, documentPath, ticketPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieDocumentRecordAsync(string documentPKID, string documentPath, string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieDocumentRecordOperationCompleted == null)) {
                this.UpdateBilletterieDocumentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieDocumentRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieDocumentRecord", new object[] {
                        documentPKID,
                        documentPath,
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieDocumentRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieDocumentRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieDocumentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieDocumentRecordCompleted(this, new UpdateBilletterieDocumentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieTicketRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieTicketRecord(string ticketPKID, string ticketNumber, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieTicketRecord", new object[] {
                        ticketPKID,
                        ticketNumber,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieTicketRecordAsync(string ticketPKID, string ticketNumber, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieTicketRecordAsync(ticketPKID, ticketNumber, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieTicketRecordAsync(string ticketPKID, string ticketNumber, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieTicketRecordOperationCompleted == null)) {
                this.UpdateBilletterieTicketRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieTicketRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieTicketRecord", new object[] {
                        ticketPKID,
                        ticketNumber,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieTicketRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieTicketRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieTicketRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieTicketRecordCompleted(this, new UpdateBilletterieTicketRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieUserRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieUserRecord(userProfileObject universalUserObj, string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieUserRecord", new object[] {
                        universalUserObj,
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieUserRecordAsync(userProfileObject universalUserObj, string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieUserRecordAsync(universalUserObj, userPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieUserRecordAsync(userProfileObject universalUserObj, string userPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieUserRecordOperationCompleted == null)) {
                this.UpdateBilletterieUserRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieUserRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieUserRecord", new object[] {
                        universalUserObj,
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieUserRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieUserRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieUserRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieUserRecordCompleted(this, new UpdateBilletterieUserRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieOfficerRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieOfficerRecord(userProfileObject universalUserObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieOfficerRecord", new object[] {
                        universalUserObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieOfficerRecordAsync(userProfileObject universalUserObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieOfficerRecordAsync(universalUserObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieOfficerRecordAsync(userProfileObject universalUserObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieOfficerRecordOperationCompleted == null)) {
                this.InsertBilletterieOfficerRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieOfficerRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieOfficerRecord", new object[] {
                        universalUserObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieOfficerRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieOfficerRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieOfficerRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieOfficerRecordCompleted(this, new InsertBilletterieOfficerRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieOfficerRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieOfficerRecord(userProfileObject universalUserObj, string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieOfficerRecord", new object[] {
                        universalUserObj,
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerRecordAsync(userProfileObject universalUserObj, string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieOfficerRecordAsync(universalUserObj, userPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerRecordAsync(userProfileObject universalUserObj, string userPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieOfficerRecordOperationCompleted == null)) {
                this.UpdateBilletterieOfficerRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieOfficerRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieOfficerRecord", new object[] {
                        universalUserObj,
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieOfficerRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieOfficerRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieOfficerRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieOfficerRecordCompleted(this, new UpdateBilletterieOfficerRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieTempDocumentURL", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBilletterieTempDocumentURL(string docPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieTempDocumentURL", new object[] {
                        docPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieTempDocumentURLAsync(string docPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieTempDocumentURLAsync(docPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieTempDocumentURLAsync(string docPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieTempDocumentURLOperationCompleted == null)) {
                this.GetBilletterieTempDocumentURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieTempDocumentURLOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieTempDocumentURL", new object[] {
                        docPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieTempDocumentURLOperationCompleted, userState);
        }
        
        private void OnGetBilletterieTempDocumentURLOperationCompleted(object arg) {
            if ((this.GetBilletterieTempDocumentURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieTempDocumentURLCompleted(this, new GetBilletterieTempDocumentURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/DeleteBilletterieSingleTempDocuments", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject DeleteBilletterieSingleTempDocuments(string userPKID, string documentID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("DeleteBilletterieSingleTempDocuments", new object[] {
                        userPKID,
                        documentID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBilletterieSingleTempDocumentsAsync(string userPKID, string documentID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.DeleteBilletterieSingleTempDocumentsAsync(userPKID, documentID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void DeleteBilletterieSingleTempDocumentsAsync(string userPKID, string documentID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.DeleteBilletterieSingleTempDocumentsOperationCompleted == null)) {
                this.DeleteBilletterieSingleTempDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBilletterieSingleTempDocumentsOperationCompleted);
            }
            this.InvokeAsync("DeleteBilletterieSingleTempDocuments", new object[] {
                        userPKID,
                        documentID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.DeleteBilletterieSingleTempDocumentsOperationCompleted, userState);
        }
        
        private void OnDeleteBilletterieSingleTempDocumentsOperationCompleted(object arg) {
            if ((this.DeleteBilletterieSingleTempDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBilletterieSingleTempDocumentsCompleted(this, new DeleteBilletterieSingleTempDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieGenericDataTable", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBilletterieGenericDataTable(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieGenericDataTable", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieGenericDataTableAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieGenericDataTableAsync(selectStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieGenericDataTableAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieGenericDataTableOperationCompleted == null)) {
                this.GetBilletterieGenericDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieGenericDataTableOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieGenericDataTable", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieGenericDataTableOperationCompleted, userState);
        }
        
        private void OnGetBilletterieGenericDataTableOperationCompleted(object arg) {
            if ((this.GetBilletterieGenericDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieGenericDataTableCompleted(this, new GetBilletterieGenericDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetGenericBilletterieDataSetAsynch", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGenericBilletterieDataSetAsynch(string tableName, string datasetName, string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetGenericBilletterieDataSetAsynch", new object[] {
                        tableName,
                        datasetName,
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGenericBilletterieDataSetAsynchAsync(string tableName, string datasetName, string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetGenericBilletterieDataSetAsynchAsync(tableName, datasetName, sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetGenericBilletterieDataSetAsynchAsync(string tableName, string datasetName, string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetGenericBilletterieDataSetAsynchOperationCompleted == null)) {
                this.GetGenericBilletterieDataSetAsynchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGenericBilletterieDataSetAsynchOperationCompleted);
            }
            this.InvokeAsync("GetGenericBilletterieDataSetAsynch", new object[] {
                        tableName,
                        datasetName,
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetGenericBilletterieDataSetAsynchOperationCompleted, userState);
        }
        
        private void OnGetGenericBilletterieDataSetAsynchOperationCompleted(object arg) {
            if ((this.GetGenericBilletterieDataSetAsynchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGenericBilletterieDataSetAsynchCompleted(this, new GetGenericBilletterieDataSetAsynchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieOFCCATRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieOFCCATRecord(string catPKID, string ofcPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieOFCCATRecord", new object[] {
                        catPKID,
                        ofcPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieOFCCATRecordAsync(string catPKID, string ofcPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieOFCCATRecordAsync(catPKID, ofcPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieOFCCATRecordAsync(string catPKID, string ofcPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieOFCCATRecordOperationCompleted == null)) {
                this.InsertBilletterieOFCCATRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieOFCCATRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieOFCCATRecord", new object[] {
                        catPKID,
                        ofcPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieOFCCATRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieOFCCATRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieOFCCATRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieOFCCATRecordCompleted(this, new InsertBilletterieOFCCATRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieCATOFLOFCRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieCATOFLOFCRecord(string catPKID, string ofcPKID, string oflPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieCATOFLOFCRecord", new object[] {
                        catPKID,
                        ofcPKID,
                        oflPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieCATOFLOFCRecordAsync(string catPKID, string ofcPKID, string oflPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieCATOFLOFCRecordAsync(catPKID, ofcPKID, oflPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieCATOFLOFCRecordAsync(string catPKID, string ofcPKID, string oflPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieCATOFLOFCRecordOperationCompleted == null)) {
                this.InsertBilletterieCATOFLOFCRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieCATOFLOFCRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieCATOFLOFCRecord", new object[] {
                        catPKID,
                        ofcPKID,
                        oflPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieCATOFLOFCRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieCATOFLOFCRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieCATOFLOFCRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieCATOFLOFCRecordCompleted(this, new InsertBilletterieCATOFLOFCRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/DeleteGenericBilletterieRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeleteResponseObject DeleteGenericBilletterieRecord(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("DeleteGenericBilletterieRecord", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((DeleteResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGenericBilletterieRecordAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.DeleteGenericBilletterieRecordAsync(sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void DeleteGenericBilletterieRecordAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.DeleteGenericBilletterieRecordOperationCompleted == null)) {
                this.DeleteGenericBilletterieRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGenericBilletterieRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteGenericBilletterieRecord", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.DeleteGenericBilletterieRecordOperationCompleted, userState);
        }
        
        private void OnDeleteGenericBilletterieRecordOperationCompleted(object arg) {
            if ((this.DeleteGenericBilletterieRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGenericBilletterieRecordCompleted(this, new DeleteGenericBilletterieRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieSLARecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieSLARecord(slaObject p_SLA, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieSLARecord", new object[] {
                        p_SLA,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieSLARecordAsync(slaObject p_SLA, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieSLARecordAsync(p_SLA, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieSLARecordAsync(slaObject p_SLA, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieSLARecordOperationCompleted == null)) {
                this.InsertBilletterieSLARecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieSLARecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieSLARecord", new object[] {
                        p_SLA,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieSLARecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieSLARecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieSLARecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieSLARecordCompleted(this, new InsertBilletterieSLARecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieCategoryRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieCategoryRecord(categoryObject p_catObj, int catPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieCategoryRecord", new object[] {
                        p_catObj,
                        catPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieCategoryRecordAsync(categoryObject p_catObj, int catPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieCategoryRecordAsync(p_catObj, catPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieCategoryRecordAsync(categoryObject p_catObj, int catPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieCategoryRecordOperationCompleted == null)) {
                this.UpdateBilletterieCategoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieCategoryRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieCategoryRecord", new object[] {
                        p_catObj,
                        catPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieCategoryRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieCategoryRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieCategoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieCategoryRecordCompleted(this, new UpdateBilletterieCategoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieEscalationRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieEscalationRecord(escalationListObject p_escListObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieEscalationRecord", new object[] {
                        p_escListObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieEscalationRecordAsync(escalationListObject p_escListObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieEscalationRecordAsync(p_escListObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieEscalationRecordAsync(escalationListObject p_escListObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieEscalationRecordOperationCompleted == null)) {
                this.InsertBilletterieEscalationRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieEscalationRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieEscalationRecord", new object[] {
                        p_escListObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieEscalationRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieEscalationRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieEscalationRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieEscalationRecordCompleted(this, new InsertBilletterieEscalationRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieCategoryRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieCategoryRecord(categoryObject p_catObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieCategoryRecord", new object[] {
                        p_catObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieCategoryRecordAsync(categoryObject p_catObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieCategoryRecordAsync(p_catObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieCategoryRecordAsync(categoryObject p_catObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieCategoryRecordOperationCompleted == null)) {
                this.InsertBilletterieCategoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieCategoryRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieCategoryRecord", new object[] {
                        p_catObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieCategoryRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieCategoryRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieCategoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieCategoryRecordCompleted(this, new InsertBilletterieCategoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieSTRRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieSTRRecord(templateObject responseTemplateObject, string strPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieSTRRecord", new object[] {
                        responseTemplateObject,
                        strPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieSTRRecordAsync(templateObject responseTemplateObject, string strPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieSTRRecordAsync(responseTemplateObject, strPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieSTRRecordAsync(templateObject responseTemplateObject, string strPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieSTRRecordOperationCompleted == null)) {
                this.UpdateBilletterieSTRRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieSTRRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieSTRRecord", new object[] {
                        responseTemplateObject,
                        strPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieSTRRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieSTRRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieSTRRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieSTRRecordCompleted(this, new UpdateBilletterieSTRRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieAMTRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieAMTRecord(mimeTypeObject mimeTypeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieAMTRecord", new object[] {
                        mimeTypeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieAMTRecordAsync(mimeTypeObject mimeTypeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieAMTRecordAsync(mimeTypeObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieAMTRecordAsync(mimeTypeObject mimeTypeObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieAMTRecordOperationCompleted == null)) {
                this.InsertBilletterieAMTRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieAMTRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieAMTRecord", new object[] {
                        mimeTypeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieAMTRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieAMTRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieAMTRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieAMTRecordCompleted(this, new InsertBilletterieAMTRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieAMTRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieAMTRecord(mimeTypeObject mimeTypeObject, string amtPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieAMTRecord", new object[] {
                        mimeTypeObject,
                        amtPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieAMTRecordAsync(mimeTypeObject mimeTypeObject, string amtPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieAMTRecordAsync(mimeTypeObject, amtPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieAMTRecordAsync(mimeTypeObject mimeTypeObject, string amtPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieAMTRecordOperationCompleted == null)) {
                this.UpdateBilletterieAMTRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieAMTRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieAMTRecord", new object[] {
                        mimeTypeObject,
                        amtPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieAMTRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieAMTRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieAMTRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieAMTRecordCompleted(this, new UpdateBilletterieAMTRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieUSGRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieUSGRecord(userOfficeObject userOfficeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieUSGRecord", new object[] {
                        userOfficeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieUSGRecordAsync(userOfficeObject userOfficeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieUSGRecordAsync(userOfficeObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieUSGRecordAsync(userOfficeObject userOfficeObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieUSGRecordOperationCompleted == null)) {
                this.InsertBilletterieUSGRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieUSGRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieUSGRecord", new object[] {
                        userOfficeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieUSGRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieUSGRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieUSGRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieUSGRecordCompleted(this, new InsertBilletterieUSGRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieUSGRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieUSGRecord(userOfficeObject userOfficeObject, string usgPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieUSGRecord", new object[] {
                        userOfficeObject,
                        usgPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieUSGRecordAsync(userOfficeObject userOfficeObject, string usgPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieUSGRecordAsync(userOfficeObject, usgPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieUSGRecordAsync(userOfficeObject userOfficeObject, string usgPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieUSGRecordOperationCompleted == null)) {
                this.UpdateBilletterieUSGRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieUSGRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieUSGRecord", new object[] {
                        userOfficeObject,
                        usgPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieUSGRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieUSGRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieUSGRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieUSGRecordCompleted(this, new UpdateBilletterieUSGRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletteriePTYRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletteriePTYRecord(problemTypeObject problemTypeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletteriePTYRecord", new object[] {
                        problemTypeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletteriePTYRecordAsync(problemTypeObject problemTypeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletteriePTYRecordAsync(problemTypeObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletteriePTYRecordAsync(problemTypeObject problemTypeObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletteriePTYRecordOperationCompleted == null)) {
                this.InsertBilletteriePTYRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletteriePTYRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletteriePTYRecord", new object[] {
                        problemTypeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletteriePTYRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletteriePTYRecordOperationCompleted(object arg) {
            if ((this.InsertBilletteriePTYRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletteriePTYRecordCompleted(this, new InsertBilletteriePTYRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletteriePTYRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletteriePTYRecord(problemTypeObject problemTypeObject, string ptyPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletteriePTYRecord", new object[] {
                        problemTypeObject,
                        ptyPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletteriePTYRecordAsync(problemTypeObject problemTypeObject, string ptyPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletteriePTYRecordAsync(problemTypeObject, ptyPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletteriePTYRecordAsync(problemTypeObject problemTypeObject, string ptyPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletteriePTYRecordOperationCompleted == null)) {
                this.UpdateBilletteriePTYRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletteriePTYRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletteriePTYRecord", new object[] {
                        problemTypeObject,
                        ptyPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletteriePTYRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletteriePTYRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletteriePTYRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletteriePTYRecordCompleted(this, new UpdateBilletteriePTYRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieTTRRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieTTRRecord(resolvingTimeObject resolvingTimeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieTTRRecord", new object[] {
                        resolvingTimeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieTTRRecordAsync(resolvingTimeObject resolvingTimeObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieTTRRecordAsync(resolvingTimeObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieTTRRecordAsync(resolvingTimeObject resolvingTimeObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieTTRRecordOperationCompleted == null)) {
                this.InsertBilletterieTTRRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieTTRRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieTTRRecord", new object[] {
                        resolvingTimeObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieTTRRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieTTRRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieTTRRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieTTRRecordCompleted(this, new InsertBilletterieTTRRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieTTRRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieTTRRecord(resolvingTimeObject resolvingTimeObject, string ttrPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieTTRRecord", new object[] {
                        resolvingTimeObject,
                        ttrPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieTTRRecordAsync(resolvingTimeObject resolvingTimeObject, string ttrPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieTTRRecordAsync(resolvingTimeObject, ttrPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieTTRRecordAsync(resolvingTimeObject resolvingTimeObject, string ttrPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieTTRRecordOperationCompleted == null)) {
                this.UpdateBilletterieTTRRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieTTRRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieTTRRecord", new object[] {
                        resolvingTimeObject,
                        ttrPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieTTRRecordOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieTTRRecordOperationCompleted(object arg) {
            if ((this.UpdateBilletterieTTRRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieTTRRecordCompleted(this, new UpdateBilletterieTTRRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetGenericIPOnlineDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGenericIPOnlineDataSet(string tableName, string datasetName, string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetGenericIPOnlineDataSet", new object[] {
                        tableName,
                        datasetName,
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGenericIPOnlineDataSetAsync(string tableName, string datasetName, string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetGenericIPOnlineDataSetAsync(tableName, datasetName, sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetGenericIPOnlineDataSetAsync(string tableName, string datasetName, string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetGenericIPOnlineDataSetOperationCompleted == null)) {
                this.GetGenericIPOnlineDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGenericIPOnlineDataSetOperationCompleted);
            }
            this.InvokeAsync("GetGenericIPOnlineDataSet", new object[] {
                        tableName,
                        datasetName,
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetGenericIPOnlineDataSetOperationCompleted, userState);
        }
        
        private void OnGetGenericIPOnlineDataSetOperationCompleted(object arg) {
            if ((this.GetGenericIPOnlineDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGenericIPOnlineDataSetCompleted(this, new GetGenericIPOnlineDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieNoPasswordUserObject", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBilletterieNoPasswordUserObject(string userName, string emailAccount, string mobileNumber, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieNoPasswordUserObject", new object[] {
                        userName,
                        emailAccount,
                        mobileNumber,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieNoPasswordUserObjectAsync(string userName, string emailAccount, string mobileNumber, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieNoPasswordUserObjectAsync(userName, emailAccount, mobileNumber, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieNoPasswordUserObjectAsync(string userName, string emailAccount, string mobileNumber, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieNoPasswordUserObjectOperationCompleted == null)) {
                this.GetBilletterieNoPasswordUserObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieNoPasswordUserObjectOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieNoPasswordUserObject", new object[] {
                        userName,
                        emailAccount,
                        mobileNumber,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieNoPasswordUserObjectOperationCompleted, userState);
        }
        
        private void OnGetBilletterieNoPasswordUserObjectOperationCompleted(object arg) {
            if ((this.GetBilletterieNoPasswordUserObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieNoPasswordUserObjectCompleted(this, new GetBilletterieNoPasswordUserObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieCategoryScalar", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectStringResponseObject GetBilletterieCategoryScalar(string tckPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieCategoryScalar", new object[] {
                        tckPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((SelectStringResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieCategoryScalarAsync(string tckPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieCategoryScalarAsync(tckPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieCategoryScalarAsync(string tckPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieCategoryScalarOperationCompleted == null)) {
                this.GetBilletterieCategoryScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieCategoryScalarOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieCategoryScalar", new object[] {
                        tckPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieCategoryScalarOperationCompleted, userState);
        }
        
        private void OnGetBilletterieCategoryScalarOperationCompleted(object arg) {
            if ((this.GetBilletterieCategoryScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieCategoryScalarCompleted(this, new GetBilletterieCategoryScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieTicketResponseRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieTicketResponseRecord(ticketResponseObject p_ticketResponse, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieTicketResponseRecord", new object[] {
                        p_ticketResponse,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieTicketResponseRecordAsync(ticketResponseObject p_ticketResponse, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieTicketResponseRecordAsync(p_ticketResponse, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieTicketResponseRecordAsync(ticketResponseObject p_ticketResponse, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieTicketResponseRecordOperationCompleted == null)) {
                this.InsertBilletterieTicketResponseRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieTicketResponseRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieTicketResponseRecord", new object[] {
                        p_ticketResponse,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieTicketResponseRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieTicketResponseRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieTicketResponseRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieTicketResponseRecordCompleted(this, new InsertBilletterieTicketResponseRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieGenericBoolScalar", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SelectBoolResponseObject GetBilletterieGenericBoolScalar(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieGenericBoolScalar", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((SelectBoolResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieGenericBoolScalarAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieGenericBoolScalarAsync(sqlStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieGenericBoolScalarAsync(string sqlStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieGenericBoolScalarOperationCompleted == null)) {
                this.GetBilletterieGenericBoolScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieGenericBoolScalarOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieGenericBoolScalar", new object[] {
                        sqlStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieGenericBoolScalarOperationCompleted, userState);
        }
        
        private void OnGetBilletterieGenericBoolScalarOperationCompleted(object arg) {
            if ((this.GetBilletterieGenericBoolScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieGenericBoolScalarCompleted(this, new GetBilletterieGenericBoolScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertTicketInformationRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTicketInformationRecord(string p_TCK_PKID, string p_TIF_KeyField, string p_TIF_KeyValue, int p_TIT_PKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertTicketInformationRecord", new object[] {
                        p_TCK_PKID,
                        p_TIF_KeyField,
                        p_TIF_KeyValue,
                        p_TIT_PKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTicketInformationRecordAsync(string p_TCK_PKID, string p_TIF_KeyField, string p_TIF_KeyValue, int p_TIT_PKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertTicketInformationRecordAsync(p_TCK_PKID, p_TIF_KeyField, p_TIF_KeyValue, p_TIT_PKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertTicketInformationRecordAsync(string p_TCK_PKID, string p_TIF_KeyField, string p_TIF_KeyValue, int p_TIT_PKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertTicketInformationRecordOperationCompleted == null)) {
                this.InsertTicketInformationRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTicketInformationRecordOperationCompleted);
            }
            this.InvokeAsync("InsertTicketInformationRecord", new object[] {
                        p_TCK_PKID,
                        p_TIF_KeyField,
                        p_TIF_KeyValue,
                        p_TIT_PKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertTicketInformationRecordOperationCompleted, userState);
        }
        
        private void OnInsertTicketInformationRecordOperationCompleted(object arg) {
            if ((this.InsertTicketInformationRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTicketInformationRecordCompleted(this, new InsertTicketInformationRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieOfficerRecordA", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieOfficerRecordA(int userStatus, int ofcPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieOfficerRecordA", new object[] {
                        userStatus,
                        ofcPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerRecordAAsync(int userStatus, int ofcPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieOfficerRecordAAsync(userStatus, ofcPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerRecordAAsync(int userStatus, int ofcPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieOfficerRecordAOperationCompleted == null)) {
                this.UpdateBilletterieOfficerRecordAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieOfficerRecordAOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieOfficerRecordA", new object[] {
                        userStatus,
                        ofcPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieOfficerRecordAOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieOfficerRecordAOperationCompleted(object arg) {
            if ((this.UpdateBilletterieOfficerRecordACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieOfficerRecordACompleted(this, new UpdateBilletterieOfficerRecordACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieOfficerRecordB", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieOfficerRecordB(string userPhoneNumber, int ofcPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieOfficerRecordB", new object[] {
                        userPhoneNumber,
                        ofcPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerRecordBAsync(string userPhoneNumber, int ofcPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieOfficerRecordBAsync(userPhoneNumber, ofcPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerRecordBAsync(string userPhoneNumber, int ofcPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieOfficerRecordBOperationCompleted == null)) {
                this.UpdateBilletterieOfficerRecordBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieOfficerRecordBOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieOfficerRecordB", new object[] {
                        userPhoneNumber,
                        ofcPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieOfficerRecordBOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieOfficerRecordBOperationCompleted(object arg) {
            if ((this.UpdateBilletterieOfficerRecordBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieOfficerRecordBCompleted(this, new UpdateBilletterieOfficerRecordBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertBilletterieUserLogRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertBilletterieUserLogRecord(userLogObject p_USL, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertBilletterieUserLogRecord", new object[] {
                        p_USL,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBilletterieUserLogRecordAsync(userLogObject p_USL, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertBilletterieUserLogRecordAsync(p_USL, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertBilletterieUserLogRecordAsync(userLogObject p_USL, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertBilletterieUserLogRecordOperationCompleted == null)) {
                this.InsertBilletterieUserLogRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBilletterieUserLogRecordOperationCompleted);
            }
            this.InvokeAsync("InsertBilletterieUserLogRecord", new object[] {
                        p_USL,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertBilletterieUserLogRecordOperationCompleted, userState);
        }
        
        private void OnInsertBilletterieUserLogRecordOperationCompleted(object arg) {
            if ((this.InsertBilletterieUserLogRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBilletterieUserLogRecordCompleted(this, new InsertBilletterieUserLogRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieBulkTicketStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieBulkTicketStatus(string tckPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieBulkTicketStatus", new object[] {
                        tckPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieBulkTicketStatusAsync(string tckPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieBulkTicketStatusAsync(tckPKIDs, newStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieBulkTicketStatusAsync(string tckPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieBulkTicketStatusOperationCompleted == null)) {
                this.UpdateBilletterieBulkTicketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieBulkTicketStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieBulkTicketStatus", new object[] {
                        tckPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieBulkTicketStatusOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieBulkTicketStatusOperationCompleted(object arg) {
            if ((this.UpdateBilletterieBulkTicketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieBulkTicketStatusCompleted(this, new UpdateBilletterieBulkTicketStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieTicketStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieTicketStatus(string ticketPKID, string ticketStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieTicketStatus", new object[] {
                        ticketPKID,
                        ticketStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieTicketStatusAsync(string ticketPKID, string ticketStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieTicketStatusAsync(ticketPKID, ticketStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieTicketStatusAsync(string ticketPKID, string ticketStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieTicketStatusOperationCompleted == null)) {
                this.UpdateBilletterieTicketStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieTicketStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieTicketStatus", new object[] {
                        ticketPKID,
                        ticketStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieTicketStatusOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieTicketStatusOperationCompleted(object arg) {
            if ((this.UpdateBilletterieTicketStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieTicketStatusCompleted(this, new UpdateBilletterieTicketStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetEmailAccount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmailAccount(string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetEmailAccount", new object[] {
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailAccountAsync(string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetEmailAccountAsync(userPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetEmailAccountAsync(string userPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetEmailAccountOperationCompleted == null)) {
                this.GetEmailAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailAccountOperationCompleted);
            }
            this.InvokeAsync("GetEmailAccount", new object[] {
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetEmailAccountOperationCompleted, userState);
        }
        
        private void OnGetEmailAccountOperationCompleted(object arg) {
            if ((this.GetEmailAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailAccountCompleted(this, new GetEmailAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/DeleteAllTempDocuments", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject DeleteAllTempDocuments(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("DeleteAllTempDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllTempDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            this.DeleteAllTempDocumentsAsync(userPKID, userType, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void DeleteAllTempDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.DeleteAllTempDocumentsOperationCompleted == null)) {
                this.DeleteAllTempDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllTempDocumentsOperationCompleted);
            }
            this.InvokeAsync("DeleteAllTempDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.DeleteAllTempDocumentsOperationCompleted, userState);
        }
        
        private void OnDeleteAllTempDocumentsOperationCompleted(object arg) {
            if ((this.DeleteAllTempDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllTempDocumentsCompleted(this, new DeleteAllTempDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetLocalFileSystemDocument", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocalFileSystemDocument(string documentUniqueID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetLocalFileSystemDocument", new object[] {
                        documentUniqueID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocalFileSystemDocumentAsync(string documentUniqueID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetLocalFileSystemDocumentAsync(documentUniqueID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetLocalFileSystemDocumentAsync(string documentUniqueID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetLocalFileSystemDocumentOperationCompleted == null)) {
                this.GetLocalFileSystemDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalFileSystemDocumentOperationCompleted);
            }
            this.InvokeAsync("GetLocalFileSystemDocument", new object[] {
                        documentUniqueID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetLocalFileSystemDocumentOperationCompleted, userState);
        }
        
        private void OnGetLocalFileSystemDocumentOperationCompleted(object arg) {
            if ((this.GetLocalFileSystemDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalFileSystemDocumentCompleted(this, new GetLocalFileSystemDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieLoginCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBilletterieLoginCount(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieLoginCountAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieLoginCountOperationCompleted == null)) {
                this.GetBilletterieLoginCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieLoginCountOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieLoginCountOperationCompleted, userState);
        }
        
        private void OnGetBilletterieLoginCountOperationCompleted(object arg) {
            if ((this.GetBilletterieLoginCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieLoginCountCompleted(this, new GetBilletterieLoginCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/IncreaseBilletterieUserLoginCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject IncreaseBilletterieUserLoginCount(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("IncreaseBilletterieUserLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void IncreaseBilletterieUserLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.IncreaseBilletterieUserLoginCountAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void IncreaseBilletterieUserLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.IncreaseBilletterieUserLoginCountOperationCompleted == null)) {
                this.IncreaseBilletterieUserLoginCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncreaseBilletterieUserLoginCountOperationCompleted);
            }
            this.InvokeAsync("IncreaseBilletterieUserLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.IncreaseBilletterieUserLoginCountOperationCompleted, userState);
        }
        
        private void OnIncreaseBilletterieUserLoginCountOperationCompleted(object arg) {
            if ((this.IncreaseBilletterieUserLoginCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncreaseBilletterieUserLoginCountCompleted(this, new IncreaseBilletterieUserLoginCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieUserStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieUserStatus(string userName, string userStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieUserStatus", new object[] {
                        userName,
                        userStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieUserStatusAsync(string userName, string userStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieUserStatusAsync(userName, userStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieUserStatusAsync(string userName, string userStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieUserStatusOperationCompleted == null)) {
                this.UpdateBilletterieUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieUserStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieUserStatus", new object[] {
                        userName,
                        userStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieUserStatusOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieUserStatusOperationCompleted(object arg) {
            if ((this.UpdateBilletterieUserStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieUserStatusCompleted(this, new UpdateBilletterieUserStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/CreateOTPValue", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateOTPValue(string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("CreateOTPValue", new object[] {
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOTPValueAsync(string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.CreateOTPValueAsync(userPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void CreateOTPValueAsync(string userPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.CreateOTPValueOperationCompleted == null)) {
                this.CreateOTPValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOTPValueOperationCompleted);
            }
            this.InvokeAsync("CreateOTPValue", new object[] {
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.CreateOTPValueOperationCompleted, userState);
        }
        
        private void OnCreateOTPValueOperationCompleted(object arg) {
            if ((this.CreateOTPValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOTPValueCompleted(this, new CreateOTPValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetUserOTPValue", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserOTPValue(string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetUserOTPValue", new object[] {
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserOTPValueAsync(string userPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetUserOTPValueAsync(userPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetUserOTPValueAsync(string userPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetUserOTPValueOperationCompleted == null)) {
                this.GetUserOTPValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOTPValueOperationCompleted);
            }
            this.InvokeAsync("GetUserOTPValue", new object[] {
                        userPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetUserOTPValueOperationCompleted, userState);
        }
        
        private void OnGetUserOTPValueOperationCompleted(object arg) {
            if ((this.GetUserOTPValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserOTPValueCompleted(this, new GetUserOTPValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/ResetBilletterieUserLoginCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject ResetBilletterieUserLoginCount(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("ResetBilletterieUserLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void ResetBilletterieUserLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.ResetBilletterieUserLoginCountAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void ResetBilletterieUserLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.ResetBilletterieUserLoginCountOperationCompleted == null)) {
                this.ResetBilletterieUserLoginCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetBilletterieUserLoginCountOperationCompleted);
            }
            this.InvokeAsync("ResetBilletterieUserLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.ResetBilletterieUserLoginCountOperationCompleted, userState);
        }
        
        private void OnResetBilletterieUserLoginCountOperationCompleted(object arg) {
            if ((this.ResetBilletterieUserLoginCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetBilletterieUserLoginCountCompleted(this, new ResetBilletterieUserLoginCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetBilletterieOfficerLoginCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBilletterieOfficerLoginCount(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetBilletterieOfficerLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetBilletterieOfficerLoginCountAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetBilletterieOfficerLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetBilletterieOfficerLoginCountOperationCompleted == null)) {
                this.GetBilletterieOfficerLoginCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilletterieOfficerLoginCountOperationCompleted);
            }
            this.InvokeAsync("GetBilletterieOfficerLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetBilletterieOfficerLoginCountOperationCompleted, userState);
        }
        
        private void OnGetBilletterieOfficerLoginCountOperationCompleted(object arg) {
            if ((this.GetBilletterieOfficerLoginCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilletterieOfficerLoginCountCompleted(this, new GetBilletterieOfficerLoginCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/IncreaseBilletterieOfficerLoginCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject IncreaseBilletterieOfficerLoginCount(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("IncreaseBilletterieOfficerLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void IncreaseBilletterieOfficerLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.IncreaseBilletterieOfficerLoginCountAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void IncreaseBilletterieOfficerLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.IncreaseBilletterieOfficerLoginCountOperationCompleted == null)) {
                this.IncreaseBilletterieOfficerLoginCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncreaseBilletterieOfficerLoginCountOperationCompleted);
            }
            this.InvokeAsync("IncreaseBilletterieOfficerLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.IncreaseBilletterieOfficerLoginCountOperationCompleted, userState);
        }
        
        private void OnIncreaseBilletterieOfficerLoginCountOperationCompleted(object arg) {
            if ((this.IncreaseBilletterieOfficerLoginCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncreaseBilletterieOfficerLoginCountCompleted(this, new IncreaseBilletterieOfficerLoginCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateBilletterieOfficerStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateBilletterieOfficerStatus(string userName, string userStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateBilletterieOfficerStatus", new object[] {
                        userName,
                        userStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerStatusAsync(string userName, string userStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateBilletterieOfficerStatusAsync(userName, userStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateBilletterieOfficerStatusAsync(string userName, string userStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateBilletterieOfficerStatusOperationCompleted == null)) {
                this.UpdateBilletterieOfficerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBilletterieOfficerStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateBilletterieOfficerStatus", new object[] {
                        userName,
                        userStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateBilletterieOfficerStatusOperationCompleted, userState);
        }
        
        private void OnUpdateBilletterieOfficerStatusOperationCompleted(object arg) {
            if ((this.UpdateBilletterieOfficerStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBilletterieOfficerStatusCompleted(this, new UpdateBilletterieOfficerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/ResetBilletterieOfficerLoginCount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject ResetBilletterieOfficerLoginCount(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("ResetBilletterieOfficerLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void ResetBilletterieOfficerLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey) {
            this.ResetBilletterieOfficerLoginCountAsync(userName, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void ResetBilletterieOfficerLoginCountAsync(string userName, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.ResetBilletterieOfficerLoginCountOperationCompleted == null)) {
                this.ResetBilletterieOfficerLoginCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetBilletterieOfficerLoginCountOperationCompleted);
            }
            this.InvokeAsync("ResetBilletterieOfficerLoginCount", new object[] {
                        userName,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.ResetBilletterieOfficerLoginCountOperationCompleted, userState);
        }
        
        private void OnResetBilletterieOfficerLoginCountOperationCompleted(object arg) {
            if ((this.ResetBilletterieOfficerLoginCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetBilletterieOfficerLoginCountCompleted(this, new ResetBilletterieOfficerLoginCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/BankingDetailsExist", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BankingDetailsExist(string agentCode, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("BankingDetailsExist", new object[] {
                        agentCode,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BankingDetailsExistAsync(string agentCode, string apiUserName, string apiUserPassword, string serviceKey) {
            this.BankingDetailsExistAsync(agentCode, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void BankingDetailsExistAsync(string agentCode, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.BankingDetailsExistOperationCompleted == null)) {
                this.BankingDetailsExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankingDetailsExistOperationCompleted);
            }
            this.InvokeAsync("BankingDetailsExist", new object[] {
                        agentCode,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.BankingDetailsExistOperationCompleted, userState);
        }
        
        private void OnBankingDetailsExistOperationCompleted(object arg) {
            if ((this.BankingDetailsExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankingDetailsExistCompleted(this, new BankingDetailsExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/BankingAccountExist", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BankingAccountExist(string bankAccount, string agentCode, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("BankingAccountExist", new object[] {
                        bankAccount,
                        agentCode,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BankingAccountExistAsync(string bankAccount, string agentCode, string apiUserName, string apiUserPassword, string serviceKey) {
            this.BankingAccountExistAsync(bankAccount, agentCode, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void BankingAccountExistAsync(string bankAccount, string agentCode, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.BankingAccountExistOperationCompleted == null)) {
                this.BankingAccountExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBankingAccountExistOperationCompleted);
            }
            this.InvokeAsync("BankingAccountExist", new object[] {
                        bankAccount,
                        agentCode,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.BankingAccountExistOperationCompleted, userState);
        }
        
        private void OnBankingAccountExistOperationCompleted(object arg) {
            if ((this.BankingAccountExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BankingAccountExistCompleted(this, new BankingAccountExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCBRSTicketPKID", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCBRSTicketPKID(string bankAccount, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCBRSTicketPKID", new object[] {
                        bankAccount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBRSTicketPKIDAsync(string bankAccount, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCBRSTicketPKIDAsync(bankAccount, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCBRSTicketPKIDAsync(string bankAccount, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCBRSTicketPKIDOperationCompleted == null)) {
                this.GetCBRSTicketPKIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBRSTicketPKIDOperationCompleted);
            }
            this.InvokeAsync("GetCBRSTicketPKID", new object[] {
                        bankAccount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCBRSTicketPKIDOperationCompleted, userState);
        }
        
        private void OnGetCBRSTicketPKIDOperationCompleted(object arg) {
            if ((this.GetCBRSTicketPKIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBRSTicketPKIDCompleted(this, new GetCBRSTicketPKIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSBulkCustomerRecordStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSBulkCustomerRecordStatus(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSBulkCustomerRecordStatus", new object[] {
                        cusPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSBulkCustomerRecordStatusAsync(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSBulkCustomerRecordStatusAsync(cusPKIDs, newStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSBulkCustomerRecordStatusAsync(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSBulkCustomerRecordStatusOperationCompleted == null)) {
                this.UpdateCBRSBulkCustomerRecordStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSBulkCustomerRecordStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSBulkCustomerRecordStatus", new object[] {
                        cusPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSBulkCustomerRecordStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSBulkCustomerRecordStatusOperationCompleted(object arg) {
            if ((this.UpdateCBRSBulkCustomerRecordStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSBulkCustomerRecordStatusCompleted(this, new UpdateCBRSBulkCustomerRecordStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertCustomerDetailRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertCustomerDetailRecord(cbrsCustomerDetailObject customerDetailObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertCustomerDetailRecord", new object[] {
                        customerDetailObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerDetailRecordAsync(cbrsCustomerDetailObject customerDetailObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertCustomerDetailRecordAsync(customerDetailObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertCustomerDetailRecordAsync(cbrsCustomerDetailObject customerDetailObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertCustomerDetailRecordOperationCompleted == null)) {
                this.InsertCustomerDetailRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerDetailRecordOperationCompleted);
            }
            this.InvokeAsync("InsertCustomerDetailRecord", new object[] {
                        customerDetailObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertCustomerDetailRecordOperationCompleted, userState);
        }
        
        private void OnInsertCustomerDetailRecordOperationCompleted(object arg) {
            if ((this.InsertCustomerDetailRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerDetailRecordCompleted(this, new InsertCustomerDetailRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertCBRSDocumentRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertCBRSDocumentRecord(fileAttachmentObject p_document, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertCBRSDocumentRecord", new object[] {
                        p_document,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCBRSDocumentRecordAsync(fileAttachmentObject p_document, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertCBRSDocumentRecordAsync(p_document, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertCBRSDocumentRecordAsync(fileAttachmentObject p_document, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertCBRSDocumentRecordOperationCompleted == null)) {
                this.InsertCBRSDocumentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCBRSDocumentRecordOperationCompleted);
            }
            this.InvokeAsync("InsertCBRSDocumentRecord", new object[] {
                        p_document,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertCBRSDocumentRecordOperationCompleted, userState);
        }
        
        private void OnInsertCBRSDocumentRecordOperationCompleted(object arg) {
            if ((this.InsertCBRSDocumentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCBRSDocumentRecordCompleted(this, new InsertCBRSDocumentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSDocumentRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSDocumentRecord(string documentPKID, string documentPath, string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSDocumentRecord", new object[] {
                        documentPKID,
                        documentPath,
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSDocumentRecordAsync(string documentPKID, string documentPath, string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSDocumentRecordAsync(documentPKID, documentPath, ticketPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSDocumentRecordAsync(string documentPKID, string documentPath, string ticketPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSDocumentRecordOperationCompleted == null)) {
                this.UpdateCBRSDocumentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSDocumentRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSDocumentRecord", new object[] {
                        documentPKID,
                        documentPath,
                        ticketPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSDocumentRecordOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSDocumentRecordOperationCompleted(object arg) {
            if ((this.UpdateCBRSDocumentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSDocumentRecordCompleted(this, new UpdateCBRSDocumentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSCustomerRecordTicket", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSCustomerRecordTicket(string cusPKID, string tckPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSCustomerRecordTicket", new object[] {
                        cusPKID,
                        tckPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSCustomerRecordTicketAsync(string cusPKID, string tckPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSCustomerRecordTicketAsync(cusPKID, tckPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSCustomerRecordTicketAsync(string cusPKID, string tckPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSCustomerRecordTicketOperationCompleted == null)) {
                this.UpdateCBRSCustomerRecordTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSCustomerRecordTicketOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSCustomerRecordTicket", new object[] {
                        cusPKID,
                        tckPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSCustomerRecordTicketOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSCustomerRecordTicketOperationCompleted(object arg) {
            if ((this.UpdateCBRSCustomerRecordTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSCustomerRecordTicketCompleted(this, new UpdateCBRSCustomerRecordTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetTemporaryCBRSDocuments", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemporaryCBRSDocuments(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetTemporaryCBRSDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemporaryCBRSDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetTemporaryCBRSDocumentsAsync(userPKID, userType, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetTemporaryCBRSDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetTemporaryCBRSDocumentsOperationCompleted == null)) {
                this.GetTemporaryCBRSDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemporaryCBRSDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetTemporaryCBRSDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetTemporaryCBRSDocumentsOperationCompleted, userState);
        }
        
        private void OnGetTemporaryCBRSDocumentsOperationCompleted(object arg) {
            if ((this.GetTemporaryCBRSDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemporaryCBRSDocumentsCompleted(this, new GetTemporaryCBRSDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/AddTempCBRSDocument", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject AddTempCBRSDocument(fileAttachmentObject tempDocumentObject, string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("AddTempCBRSDocument", new object[] {
                        tempDocumentObject,
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void AddTempCBRSDocumentAsync(fileAttachmentObject tempDocumentObject, string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            this.AddTempCBRSDocumentAsync(tempDocumentObject, userPKID, userType, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void AddTempCBRSDocumentAsync(fileAttachmentObject tempDocumentObject, string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.AddTempCBRSDocumentOperationCompleted == null)) {
                this.AddTempCBRSDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTempCBRSDocumentOperationCompleted);
            }
            this.InvokeAsync("AddTempCBRSDocument", new object[] {
                        tempDocumentObject,
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.AddTempCBRSDocumentOperationCompleted, userState);
        }
        
        private void OnAddTempCBRSDocumentOperationCompleted(object arg) {
            if ((this.AddTempCBRSDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTempCBRSDocumentCompleted(this, new AddTempCBRSDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetTempCBRSDocumentURL", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTempCBRSDocumentURL(string docPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetTempCBRSDocumentURL", new object[] {
                        docPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempCBRSDocumentURLAsync(string docPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetTempCBRSDocumentURLAsync(docPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetTempCBRSDocumentURLAsync(string docPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetTempCBRSDocumentURLOperationCompleted == null)) {
                this.GetTempCBRSDocumentURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempCBRSDocumentURLOperationCompleted);
            }
            this.InvokeAsync("GetTempCBRSDocumentURL", new object[] {
                        docPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetTempCBRSDocumentURLOperationCompleted, userState);
        }
        
        private void OnGetTempCBRSDocumentURLOperationCompleted(object arg) {
            if ((this.GetTempCBRSDocumentURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempCBRSDocumentURLCompleted(this, new GetTempCBRSDocumentURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/DeleteSingleCBRSTempDocuments", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject DeleteSingleCBRSTempDocuments(string userPKID, string documentID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("DeleteSingleCBRSTempDocuments", new object[] {
                        userPKID,
                        documentID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSingleCBRSTempDocumentsAsync(string userPKID, string documentID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.DeleteSingleCBRSTempDocumentsAsync(userPKID, documentID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void DeleteSingleCBRSTempDocumentsAsync(string userPKID, string documentID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.DeleteSingleCBRSTempDocumentsOperationCompleted == null)) {
                this.DeleteSingleCBRSTempDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSingleCBRSTempDocumentsOperationCompleted);
            }
            this.InvokeAsync("DeleteSingleCBRSTempDocuments", new object[] {
                        userPKID,
                        documentID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.DeleteSingleCBRSTempDocumentsOperationCompleted, userState);
        }
        
        private void OnDeleteSingleCBRSTempDocumentsOperationCompleted(object arg) {
            if ((this.DeleteSingleCBRSTempDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSingleCBRSTempDocumentsCompleted(this, new DeleteSingleCBRSTempDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/DeleteAllCBRSTempDocuments", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject DeleteAllCBRSTempDocuments(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("DeleteAllCBRSTempDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllCBRSTempDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey) {
            this.DeleteAllCBRSTempDocumentsAsync(userPKID, userType, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void DeleteAllCBRSTempDocumentsAsync(string userPKID, string userType, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.DeleteAllCBRSTempDocumentsOperationCompleted == null)) {
                this.DeleteAllCBRSTempDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllCBRSTempDocumentsOperationCompleted);
            }
            this.InvokeAsync("DeleteAllCBRSTempDocuments", new object[] {
                        userPKID,
                        userType,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.DeleteAllCBRSTempDocumentsOperationCompleted, userState);
        }
        
        private void OnDeleteAllCBRSTempDocumentsOperationCompleted(object arg) {
            if ((this.DeleteAllCBRSTempDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllCBRSTempDocumentsCompleted(this, new DeleteAllCBRSTempDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSApprovedBalance", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSApprovedBalance(string cusPKID, string approvedBalance, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSApprovedBalance", new object[] {
                        cusPKID,
                        approvedBalance,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSApprovedBalanceAsync(string cusPKID, string approvedBalance, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSApprovedBalanceAsync(cusPKID, approvedBalance, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSApprovedBalanceAsync(string cusPKID, string approvedBalance, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSApprovedBalanceOperationCompleted == null)) {
                this.UpdateCBRSApprovedBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSApprovedBalanceOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSApprovedBalance", new object[] {
                        cusPKID,
                        approvedBalance,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSApprovedBalanceOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSApprovedBalanceOperationCompleted(object arg) {
            if ((this.UpdateCBRSApprovedBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSApprovedBalanceCompleted(this, new UpdateCBRSApprovedBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCBRSUserIDDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCBRSUserIDDataSet(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCBRSUserIDDataSet", new object[] {
                        cusPKIDs,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBRSUserIDDataSetAsync(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCBRSUserIDDataSetAsync(cusPKIDs, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCBRSUserIDDataSetAsync(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCBRSUserIDDataSetOperationCompleted == null)) {
                this.GetCBRSUserIDDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBRSUserIDDataSetOperationCompleted);
            }
            this.InvokeAsync("GetCBRSUserIDDataSet", new object[] {
                        cusPKIDs,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCBRSUserIDDataSetOperationCompleted, userState);
        }
        
        private void OnGetCBRSUserIDDataSetOperationCompleted(object arg) {
            if ((this.GetCBRSUserIDDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBRSUserIDDataSetCompleted(this, new GetCBRSUserIDDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCBRSCustomerRefundDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCBRSCustomerRefundDataSet(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCBRSCustomerRefundDataSet", new object[] {
                        cusPKIDs,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBRSCustomerRefundDataSetAsync(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCBRSCustomerRefundDataSetAsync(cusPKIDs, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCBRSCustomerRefundDataSetAsync(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCBRSCustomerRefundDataSetOperationCompleted == null)) {
                this.GetCBRSCustomerRefundDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBRSCustomerRefundDataSetOperationCompleted);
            }
            this.InvokeAsync("GetCBRSCustomerRefundDataSet", new object[] {
                        cusPKIDs,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCBRSCustomerRefundDataSetOperationCompleted, userState);
        }
        
        private void OnGetCBRSCustomerRefundDataSetOperationCompleted(object arg) {
            if ((this.GetCBRSCustomerRefundDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBRSCustomerRefundDataSetCompleted(this, new GetCBRSCustomerRefundDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCBRSCustomerObjectDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCBRSCustomerObjectDataSet(string cusPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCBRSCustomerObjectDataSet", new object[] {
                        cusPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBRSCustomerObjectDataSetAsync(string cusPKID, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCBRSCustomerObjectDataSetAsync(cusPKID, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCBRSCustomerObjectDataSetAsync(string cusPKID, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCBRSCustomerObjectDataSetOperationCompleted == null)) {
                this.GetCBRSCustomerObjectDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBRSCustomerObjectDataSetOperationCompleted);
            }
            this.InvokeAsync("GetCBRSCustomerObjectDataSet", new object[] {
                        cusPKID,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCBRSCustomerObjectDataSetOperationCompleted, userState);
        }
        
        private void OnGetCBRSCustomerObjectDataSetOperationCompleted(object arg) {
            if ((this.GetCBRSCustomerObjectDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBRSCustomerObjectDataSetCompleted(this, new GetCBRSCustomerObjectDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSBulkCustomerTXFRecordStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSBulkCustomerTXFRecordStatus(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSBulkCustomerTXFRecordStatus", new object[] {
                        cusPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSBulkCustomerTXFRecordStatusAsync(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSBulkCustomerTXFRecordStatusAsync(cusPKIDs, newStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSBulkCustomerTXFRecordStatusAsync(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSBulkCustomerTXFRecordStatusOperationCompleted == null)) {
                this.UpdateCBRSBulkCustomerTXFRecordStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSBulkCustomerTXFRecordStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSBulkCustomerTXFRecordStatus", new object[] {
                        cusPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSBulkCustomerTXFRecordStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSBulkCustomerTXFRecordStatusOperationCompleted(object arg) {
            if ((this.UpdateCBRSBulkCustomerTXFRecordStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSBulkCustomerTXFRecordStatusCompleted(this, new UpdateCBRSBulkCustomerTXFRecordStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSERMSTransID", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSERMSTransID(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSERMSTransID", new object[] {
                        cusPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSERMSTransIDAsync(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSERMSTransIDAsync(cusPKIDs, newStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSERMSTransIDAsync(string cusPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSERMSTransIDOperationCompleted == null)) {
                this.UpdateCBRSERMSTransIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSERMSTransIDOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSERMSTransID", new object[] {
                        cusPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSERMSTransIDOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSERMSTransIDOperationCompleted(object arg) {
            if ((this.UpdateCBRSERMSTransIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSERMSTransIDCompleted(this, new UpdateCBRSERMSTransIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSERMSReinTransID", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSERMSReinTransID(string cusPKIDs, string ermsValue, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSERMSReinTransID", new object[] {
                        cusPKIDs,
                        ermsValue,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSERMSReinTransIDAsync(string cusPKIDs, string ermsValue, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSERMSReinTransIDAsync(cusPKIDs, ermsValue, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSERMSReinTransIDAsync(string cusPKIDs, string ermsValue, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSERMSReinTransIDOperationCompleted == null)) {
                this.UpdateCBRSERMSReinTransIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSERMSReinTransIDOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSERMSReinTransID", new object[] {
                        cusPKIDs,
                        ermsValue,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSERMSReinTransIDOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSERMSReinTransIDOperationCompleted(object arg) {
            if ((this.UpdateCBRSERMSReinTransIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSERMSReinTransIDCompleted(this, new UpdateCBRSERMSReinTransIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateTFXTextFileStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateTFXTextFileStatus(string txfPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateTFXTextFileStatus", new object[] {
                        txfPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTFXTextFileStatusAsync(string txfPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateTFXTextFileStatusAsync(txfPKIDs, newStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateTFXTextFileStatusAsync(string txfPKIDs, string newStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateTFXTextFileStatusOperationCompleted == null)) {
                this.UpdateTFXTextFileStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTFXTextFileStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateTFXTextFileStatus", new object[] {
                        txfPKIDs,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateTFXTextFileStatusOperationCompleted, userState);
        }
        
        private void OnUpdateTFXTextFileStatusOperationCompleted(object arg) {
            if ((this.UpdateTFXTextFileStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTFXTextFileStatusCompleted(this, new UpdateTFXTextFileStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCBRSTotalBalance", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCBRSTotalBalance(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCBRSTotalBalance", new object[] {
                        cusPKIDs,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCBRSTotalBalanceAsync(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCBRSTotalBalanceAsync(cusPKIDs, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCBRSTotalBalanceAsync(string cusPKIDs, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCBRSTotalBalanceOperationCompleted == null)) {
                this.GetCBRSTotalBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCBRSTotalBalanceOperationCompleted);
            }
            this.InvokeAsync("GetCBRSTotalBalance", new object[] {
                        cusPKIDs,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCBRSTotalBalanceOperationCompleted, userState);
        }
        
        private void OnGetCBRSTotalBalanceOperationCompleted(object arg) {
            if ((this.GetCBRSTotalBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCBRSTotalBalanceCompleted(this, new GetCBRSTotalBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertFlatfileDetailRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertFlatfileDetailRecord(cbrsFlatFileObject flatFileObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertFlatfileDetailRecord", new object[] {
                        flatFileObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFlatfileDetailRecordAsync(cbrsFlatFileObject flatFileObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertFlatfileDetailRecordAsync(flatFileObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertFlatfileDetailRecordAsync(cbrsFlatFileObject flatFileObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertFlatfileDetailRecordOperationCompleted == null)) {
                this.InsertFlatfileDetailRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFlatfileDetailRecordOperationCompleted);
            }
            this.InvokeAsync("InsertFlatfileDetailRecord", new object[] {
                        flatFileObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertFlatfileDetailRecordOperationCompleted, userState);
        }
        
        private void OnInsertFlatfileDetailRecordOperationCompleted(object arg) {
            if ((this.InsertFlatfileDetailRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFlatfileDetailRecordCompleted(this, new InsertFlatfileDetailRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertApprovalDetailRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertApprovalDetailRecord(cbrsApprovalDetailObject approvalObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertApprovalDetailRecord", new object[] {
                        approvalObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertApprovalDetailRecordAsync(cbrsApprovalDetailObject approvalObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertApprovalDetailRecordAsync(approvalObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertApprovalDetailRecordAsync(cbrsApprovalDetailObject approvalObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertApprovalDetailRecordOperationCompleted == null)) {
                this.InsertApprovalDetailRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertApprovalDetailRecordOperationCompleted);
            }
            this.InvokeAsync("InsertApprovalDetailRecord", new object[] {
                        approvalObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertApprovalDetailRecordOperationCompleted, userState);
        }
        
        private void OnInsertApprovalDetailRecordOperationCompleted(object arg) {
            if ((this.InsertApprovalDetailRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertApprovalDetailRecordCompleted(this, new InsertApprovalDetailRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/UpdateCBRSCustomerRecordStatus", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateResponseObject UpdateCBRSCustomerRecordStatus(string cusPKID, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("UpdateCBRSCustomerRecordStatus", new object[] {
                        cusPKID,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((UpdateResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCBRSCustomerRecordStatusAsync(string cusPKID, string newStatus, string apiUserName, string apiUserPassword, string serviceKey) {
            this.UpdateCBRSCustomerRecordStatusAsync(cusPKID, newStatus, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void UpdateCBRSCustomerRecordStatusAsync(string cusPKID, string newStatus, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.UpdateCBRSCustomerRecordStatusOperationCompleted == null)) {
                this.UpdateCBRSCustomerRecordStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCBRSCustomerRecordStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCBRSCustomerRecordStatus", new object[] {
                        cusPKID,
                        newStatus,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.UpdateCBRSCustomerRecordStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCBRSCustomerRecordStatusOperationCompleted(object arg) {
            if ((this.UpdateCBRSCustomerRecordStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCBRSCustomerRecordStatusCompleted(this, new UpdateCBRSCustomerRecordStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/InsertErrorLogRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject InsertErrorLogRecord(cbrsErrorLogObject approvalObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("InsertErrorLogRecord", new object[] {
                        approvalObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void InsertErrorLogRecordAsync(cbrsErrorLogObject approvalObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.InsertErrorLogRecordAsync(approvalObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void InsertErrorLogRecordAsync(cbrsErrorLogObject approvalObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.InsertErrorLogRecordOperationCompleted == null)) {
                this.InsertErrorLogRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertErrorLogRecordOperationCompleted);
            }
            this.InvokeAsync("InsertErrorLogRecord", new object[] {
                        approvalObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.InsertErrorLogRecordOperationCompleted, userState);
        }
        
        private void OnInsertErrorLogRecordOperationCompleted(object arg) {
            if ((this.InsertErrorLogRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertErrorLogRecordCompleted(this, new InsertErrorLogRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/AddUserLogRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject AddUserLogRecord(UserLogObject p_userLogObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("AddUserLogRecord", new object[] {
                        p_userLogObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserLogRecordAsync(UserLogObject p_userLogObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.AddUserLogRecordAsync(p_userLogObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void AddUserLogRecordAsync(UserLogObject p_userLogObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.AddUserLogRecordOperationCompleted == null)) {
                this.AddUserLogRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserLogRecordOperationCompleted);
            }
            this.InvokeAsync("AddUserLogRecord", new object[] {
                        p_userLogObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.AddUserLogRecordOperationCompleted, userState);
        }
        
        private void OnAddUserLogRecordOperationCompleted(object arg) {
            if ((this.AddUserLogRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserLogRecordCompleted(this, new AddUserLogRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetEncryptedValue", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEncryptedValue(string plainText, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetEncryptedValue", new object[] {
                        plainText,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEncryptedValueAsync(string plainText, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetEncryptedValueAsync(plainText, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetEncryptedValueAsync(string plainText, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetEncryptedValueOperationCompleted == null)) {
                this.GetEncryptedValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEncryptedValueOperationCompleted);
            }
            this.InvokeAsync("GetEncryptedValue", new object[] {
                        plainText,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetEncryptedValueOperationCompleted, userState);
        }
        
        private void OnGetEncryptedValueOperationCompleted(object arg) {
            if ((this.GetEncryptedValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEncryptedValueCompleted(this, new GetEncryptedValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetDecryptedValue", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDecryptedValue(string encryptedText, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetDecryptedValue", new object[] {
                        encryptedText,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDecryptedValueAsync(string encryptedText, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetDecryptedValueAsync(encryptedText, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetDecryptedValueAsync(string encryptedText, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetDecryptedValueOperationCompleted == null)) {
                this.GetDecryptedValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDecryptedValueOperationCompleted);
            }
            this.InvokeAsync("GetDecryptedValue", new object[] {
                        encryptedText,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetDecryptedValueOperationCompleted, userState);
        }
        
        private void OnGetDecryptedValueOperationCompleted(object arg) {
            if ((this.GetDecryptedValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDecryptedValueCompleted(this, new GetDecryptedValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCurrentCipherKey", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentCipherKey(string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCurrentCipherKey", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentCipherKeyAsync(string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCurrentCipherKeyAsync(apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCurrentCipherKeyAsync(string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCurrentCipherKeyOperationCompleted == null)) {
                this.GetCurrentCipherKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentCipherKeyOperationCompleted);
            }
            this.InvokeAsync("GetCurrentCipherKey", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCurrentCipherKeyOperationCompleted, userState);
        }
        
        private void OnGetCurrentCipherKeyOperationCompleted(object arg) {
            if ((this.GetCurrentCipherKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentCipherKeyCompleted(this, new GetCurrentCipherKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetCUBADataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCUBADataSet(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetCUBADataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCUBADataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetCUBADataSetAsync(selectStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetCUBADataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetCUBADataSetOperationCompleted == null)) {
                this.GetCUBADataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCUBADataSetOperationCompleted);
            }
            this.InvokeAsync("GetCUBADataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetCUBADataSetOperationCompleted, userState);
        }
        
        private void OnGetCUBADataSetOperationCompleted(object arg) {
            if ((this.GetCUBADataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCUBADataSetCompleted(this, new GetCUBADataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetOracleDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOracleDataSet(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetOracleDataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOracleDataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetOracleDataSetAsync(selectStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetOracleDataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetOracleDataSetOperationCompleted == null)) {
                this.GetOracleDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOracleDataSetOperationCompleted);
            }
            this.InvokeAsync("GetOracleDataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetOracleDataSetOperationCompleted, userState);
        }
        
        private void OnGetOracleDataSetOperationCompleted(object arg) {
            if ((this.GetOracleDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOracleDataSetCompleted(this, new GetOracleDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/AddEmailRecord", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject AddEmailRecord(EmailMessageObject emailObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("AddEmailRecord", new object[] {
                        emailObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmailRecordAsync(EmailMessageObject emailObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.AddEmailRecordAsync(emailObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void AddEmailRecordAsync(EmailMessageObject emailObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.AddEmailRecordOperationCompleted == null)) {
                this.AddEmailRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmailRecordOperationCompleted);
            }
            this.InvokeAsync("AddEmailRecord", new object[] {
                        emailObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.AddEmailRecordOperationCompleted, userState);
        }
        
        private void OnAddEmailRecordOperationCompleted(object arg) {
            if ((this.AddEmailRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmailRecordCompleted(this, new AddEmailRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/AddEmailRecordSupport", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertResponseObject AddEmailRecordSupport(EmailMessageObject emailObject, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("AddEmailRecordSupport", new object[] {
                        emailObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InsertResponseObject)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmailRecordSupportAsync(EmailMessageObject emailObject, string apiUserName, string apiUserPassword, string serviceKey) {
            this.AddEmailRecordSupportAsync(emailObject, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void AddEmailRecordSupportAsync(EmailMessageObject emailObject, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.AddEmailRecordSupportOperationCompleted == null)) {
                this.AddEmailRecordSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmailRecordSupportOperationCompleted);
            }
            this.InvokeAsync("AddEmailRecordSupport", new object[] {
                        emailObject,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.AddEmailRecordSupportOperationCompleted, userState);
        }
        
        private void OnAddEmailRecordSupportOperationCompleted(object arg) {
            if ((this.AddEmailRecordSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmailRecordSupportCompleted(this, new AddEmailRecordSupportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetQRSEmailSettings", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public smtpSettingsObject GetQRSEmailSettings(string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetQRSEmailSettings", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((smtpSettingsObject)(results[0]));
        }
        
        /// <remarks/>
        public void GetQRSEmailSettingsAsync(string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetQRSEmailSettingsAsync(apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetQRSEmailSettingsAsync(string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetQRSEmailSettingsOperationCompleted == null)) {
                this.GetQRSEmailSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQRSEmailSettingsOperationCompleted);
            }
            this.InvokeAsync("GetQRSEmailSettings", new object[] {
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetQRSEmailSettingsOperationCompleted, userState);
        }
        
        private void OnGetQRSEmailSettingsOperationCompleted(object arg) {
            if ((this.GetQRSEmailSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQRSEmailSettingsCompleted(this, new GetQRSEmailSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetAgentBalance", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DoubleObjectResponse GetAgentBalance(string agentAccount, double debitAmount, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetAgentBalance", new object[] {
                        agentAccount,
                        debitAmount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((DoubleObjectResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentBalanceAsync(string agentAccount, double debitAmount, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetAgentBalanceAsync(agentAccount, debitAmount, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetAgentBalanceAsync(string agentAccount, double debitAmount, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetAgentBalanceOperationCompleted == null)) {
                this.GetAgentBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentBalanceOperationCompleted);
            }
            this.InvokeAsync("GetAgentBalance", new object[] {
                        agentAccount,
                        debitAmount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetAgentBalanceOperationCompleted, userState);
        }
        
        private void OnGetAgentBalanceOperationCompleted(object arg) {
            if ((this.GetAgentBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentBalanceCompleted(this, new GetAgentBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetAgentAccount", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAgentAccount(string agentAccount, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetAgentAccount", new object[] {
                        agentAccount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentAccountAsync(string agentAccount, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetAgentAccountAsync(agentAccount, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetAgentAccountAsync(string agentAccount, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetAgentAccountOperationCompleted == null)) {
                this.GetAgentAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentAccountOperationCompleted);
            }
            this.InvokeAsync("GetAgentAccount", new object[] {
                        agentAccount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetAgentAccountOperationCompleted, userState);
        }
        
        private void OnGetAgentAccountOperationCompleted(object arg) {
            if ((this.GetAgentAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentAccountCompleted(this, new GetAgentAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetERMSAgentProfile", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ERMSAgentProfileResponse GetERMSAgentProfile(string agentAccount, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetERMSAgentProfile", new object[] {
                        agentAccount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((ERMSAgentProfileResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetERMSAgentProfileAsync(string agentAccount, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetERMSAgentProfileAsync(agentAccount, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetERMSAgentProfileAsync(string agentAccount, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetERMSAgentProfileOperationCompleted == null)) {
                this.GetERMSAgentProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetERMSAgentProfileOperationCompleted);
            }
            this.InvokeAsync("GetERMSAgentProfile", new object[] {
                        agentAccount,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetERMSAgentProfileOperationCompleted, userState);
        }
        
        private void OnGetERMSAgentProfileOperationCompleted(object arg) {
            if ((this.GetERMSAgentProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetERMSAgentProfileCompleted(this, new GetERMSAgentProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetDocumentRef", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StringObjectResponse GetDocumentRef(string trackNoStatic, string yearTwoDigit, string prefixLetter, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetDocumentRef", new object[] {
                        trackNoStatic,
                        yearTwoDigit,
                        prefixLetter,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((StringObjectResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentRefAsync(string trackNoStatic, string yearTwoDigit, string prefixLetter, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetDocumentRefAsync(trackNoStatic, yearTwoDigit, prefixLetter, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetDocumentRefAsync(string trackNoStatic, string yearTwoDigit, string prefixLetter, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetDocumentRefOperationCompleted == null)) {
                this.GetDocumentRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentRefOperationCompleted);
            }
            this.InvokeAsync("GetDocumentRef", new object[] {
                        trackNoStatic,
                        yearTwoDigit,
                        prefixLetter,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetDocumentRefOperationCompleted, userState);
        }
        
        private void OnGetDocumentRefOperationCompleted(object arg) {
            if ((this.GetDocumentRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentRefCompleted(this, new GetDocumentRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/GetInformixDataSet", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InformixDataSetResponse GetInformixDataSet(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("GetInformixDataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((InformixDataSetResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetInformixDataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey) {
            this.GetInformixDataSetAsync(selectStatement, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void GetInformixDataSetAsync(string selectStatement, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.GetInformixDataSetOperationCompleted == null)) {
                this.GetInformixDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInformixDataSetOperationCompleted);
            }
            this.InvokeAsync("GetInformixDataSet", new object[] {
                        selectStatement,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.GetInformixDataSetOperationCompleted, userState);
        }
        
        private void OnGetInformixDataSetOperationCompleted(object arg) {
            if ((this.GetInformixDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInformixDataSetCompleted(this, new GetInformixDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/CheckBilling", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ERMSBillingOutputResponse CheckBilling(ERMSBillingInputResponse ermsObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("CheckBilling", new object[] {
                        ermsObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((ERMSBillingOutputResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBillingAsync(ERMSBillingInputResponse ermsObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.CheckBillingAsync(ermsObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void CheckBillingAsync(ERMSBillingInputResponse ermsObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.CheckBillingOperationCompleted == null)) {
                this.CheckBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBillingOperationCompleted);
            }
            this.InvokeAsync("CheckBilling", new object[] {
                        ermsObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.CheckBillingOperationCompleted, userState);
        }
        
        private void OnCheckBillingOperationCompleted(object arg) {
            if ((this.CheckBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBillingCompleted(this, new CheckBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://private.billetterie.sword.za/IPERMSBilling", RequestNamespace="http://private.billetterie.sword.za/", ResponseNamespace="http://private.billetterie.sword.za/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ERMSBillingOutputResponse IPERMSBilling(ERMSBillingInputResponse ermsObj, string apiUserName, string apiUserPassword, string serviceKey) {
            object[] results = this.Invoke("IPERMSBilling", new object[] {
                        ermsObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey});
            return ((ERMSBillingOutputResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IPERMSBillingAsync(ERMSBillingInputResponse ermsObj, string apiUserName, string apiUserPassword, string serviceKey) {
            this.IPERMSBillingAsync(ermsObj, apiUserName, apiUserPassword, serviceKey, null);
        }
        
        /// <remarks/>
        public void IPERMSBillingAsync(ERMSBillingInputResponse ermsObj, string apiUserName, string apiUserPassword, string serviceKey, object userState) {
            if ((this.IPERMSBillingOperationCompleted == null)) {
                this.IPERMSBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPERMSBillingOperationCompleted);
            }
            this.InvokeAsync("IPERMSBilling", new object[] {
                        ermsObj,
                        apiUserName,
                        apiUserPassword,
                        serviceKey}, this.IPERMSBillingOperationCompleted, userState);
        }
        
        private void OnIPERMSBillingOperationCompleted(object arg) {
            if ((this.IPERMSBillingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPERMSBillingCompleted(this, new IPERMSBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class UpdateResponseObject {
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ERMSBillingOutputObject {
        
        private string journalNumberField;
        
        private string applicationNumberField;
        
        private string journalDateField;
        
        private string agentCodeField;
        
        private string agentNameField;
        
        private string agentAddress1Field;
        
        private string agentAddress2Field;
        
        private string agentAddress3Field;
        
        private string agentAddress4Field;
        
        private string postalcodeField;
        
        private string ermsFormCodeField;
        
        private string documentReferenceField;
        
        private string fileReferenceField;
        
        private string ipFormCodeField;
        
        private string ipSectionField;
        
        private string formDescriptionField;
        
        private string debitAmountField;
        
        /// <remarks/>
        public string journalNumber {
            get {
                return this.journalNumberField;
            }
            set {
                this.journalNumberField = value;
            }
        }
        
        /// <remarks/>
        public string applicationNumber {
            get {
                return this.applicationNumberField;
            }
            set {
                this.applicationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string journalDate {
            get {
                return this.journalDateField;
            }
            set {
                this.journalDateField = value;
            }
        }
        
        /// <remarks/>
        public string agentCode {
            get {
                return this.agentCodeField;
            }
            set {
                this.agentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string agentName {
            get {
                return this.agentNameField;
            }
            set {
                this.agentNameField = value;
            }
        }
        
        /// <remarks/>
        public string agentAddress1 {
            get {
                return this.agentAddress1Field;
            }
            set {
                this.agentAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string agentAddress2 {
            get {
                return this.agentAddress2Field;
            }
            set {
                this.agentAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string agentAddress3 {
            get {
                return this.agentAddress3Field;
            }
            set {
                this.agentAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string agentAddress4 {
            get {
                return this.agentAddress4Field;
            }
            set {
                this.agentAddress4Field = value;
            }
        }
        
        /// <remarks/>
        public string postalcode {
            get {
                return this.postalcodeField;
            }
            set {
                this.postalcodeField = value;
            }
        }
        
        /// <remarks/>
        public string ermsFormCode {
            get {
                return this.ermsFormCodeField;
            }
            set {
                this.ermsFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string documentReference {
            get {
                return this.documentReferenceField;
            }
            set {
                this.documentReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string fileReference {
            get {
                return this.fileReferenceField;
            }
            set {
                this.fileReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string ipFormCode {
            get {
                return this.ipFormCodeField;
            }
            set {
                this.ipFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ipSection {
            get {
                return this.ipSectionField;
            }
            set {
                this.ipSectionField = value;
            }
        }
        
        /// <remarks/>
        public string formDescription {
            get {
                return this.formDescriptionField;
            }
            set {
                this.formDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string debitAmount {
            get {
                return this.debitAmountField;
            }
            set {
                this.debitAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ERMSBillingOutputResponse {
        
        private ERMSBillingOutputObject ermsBillingOutputObjectField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ERMSBillingOutputObject ermsBillingOutputObject {
            get {
                return this.ermsBillingOutputObjectField;
            }
            set {
                this.ermsBillingOutputObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ERMSBillingInputObject {
        
        private string sAgentCodeField;
        
        private string sTrakNoField;
        
        private string sEntNoField;
        
        private string sIsCashField;
        
        private int iTransTypeIdField;
        
        private string sFormCodeField;
        
        private int iServiceRendCodeField;
        
        private double cTransAmountField;
        
        private string sTransDescField;
        
        private string sTransTypeField;
        
        /// <remarks/>
        public string sAgentCode {
            get {
                return this.sAgentCodeField;
            }
            set {
                this.sAgentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sTrakNo {
            get {
                return this.sTrakNoField;
            }
            set {
                this.sTrakNoField = value;
            }
        }
        
        /// <remarks/>
        public string sEntNo {
            get {
                return this.sEntNoField;
            }
            set {
                this.sEntNoField = value;
            }
        }
        
        /// <remarks/>
        public string sIsCash {
            get {
                return this.sIsCashField;
            }
            set {
                this.sIsCashField = value;
            }
        }
        
        /// <remarks/>
        public int iTransTypeId {
            get {
                return this.iTransTypeIdField;
            }
            set {
                this.iTransTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string sFormCode {
            get {
                return this.sFormCodeField;
            }
            set {
                this.sFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public int iServiceRendCode {
            get {
                return this.iServiceRendCodeField;
            }
            set {
                this.iServiceRendCodeField = value;
            }
        }
        
        /// <remarks/>
        public double cTransAmount {
            get {
                return this.cTransAmountField;
            }
            set {
                this.cTransAmountField = value;
            }
        }
        
        /// <remarks/>
        public string sTransDesc {
            get {
                return this.sTransDescField;
            }
            set {
                this.sTransDescField = value;
            }
        }
        
        /// <remarks/>
        public string sTransType {
            get {
                return this.sTransTypeField;
            }
            set {
                this.sTransTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ERMSBillingInputResponse {
        
        private ERMSBillingInputObject ermsBillingInputObjectField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ERMSBillingInputObject ermsBillingInputObject {
            get {
                return this.ermsBillingInputObjectField;
            }
            set {
                this.ermsBillingInputObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class InformixDataSetResponse {
        
        private System.Data.DataSet ermsDataSetObjectField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public System.Data.DataSet ermsDataSetObject {
            get {
                return this.ermsDataSetObjectField;
            }
            set {
                this.ermsDataSetObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class StringObjectResponse {
        
        private string stringValueField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string stringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ERMSAgentProfileObject {
        
        private string sAgentCodeField;
        
        private string sAgentNameField;
        
        private string sAgentEmailField;
        
        private string sAgentPhoneNumberField;
        
        private string sAgentCellNumberField;
        
        private string sAgentFaxField;
        
        private string sAgentPhysAddressField;
        
        private string sAgentPostAddressField;
        
        private string sAgentIDNumberField;
        
        private string sAgentStatusField;
        
        private string sAgentBalanceField;
        
        /// <remarks/>
        public string sAgentCode {
            get {
                return this.sAgentCodeField;
            }
            set {
                this.sAgentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentName {
            get {
                return this.sAgentNameField;
            }
            set {
                this.sAgentNameField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentEmail {
            get {
                return this.sAgentEmailField;
            }
            set {
                this.sAgentEmailField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentPhoneNumber {
            get {
                return this.sAgentPhoneNumberField;
            }
            set {
                this.sAgentPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentCellNumber {
            get {
                return this.sAgentCellNumberField;
            }
            set {
                this.sAgentCellNumberField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentFax {
            get {
                return this.sAgentFaxField;
            }
            set {
                this.sAgentFaxField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentPhysAddress {
            get {
                return this.sAgentPhysAddressField;
            }
            set {
                this.sAgentPhysAddressField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentPostAddress {
            get {
                return this.sAgentPostAddressField;
            }
            set {
                this.sAgentPostAddressField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentIDNumber {
            get {
                return this.sAgentIDNumberField;
            }
            set {
                this.sAgentIDNumberField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentStatus {
            get {
                return this.sAgentStatusField;
            }
            set {
                this.sAgentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string sAgentBalance {
            get {
                return this.sAgentBalanceField;
            }
            set {
                this.sAgentBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ERMSAgentProfileResponse {
        
        private ERMSAgentProfileObject ermsAgentProfileObjectField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ERMSAgentProfileObject ermsAgentProfileObject {
            get {
                return this.ermsAgentProfileObjectField;
            }
            set {
                this.ermsAgentProfileObjectField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class DoubleObjectResponse {
        
        private double doubleValueField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public double doubleValue {
            get {
                return this.doubleValueField;
            }
            set {
                this.doubleValueField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class smtpSettingsObject {
        
        private string smtpServerField;
        
        private string smtUserPassField;
        
        private string fromEmailField;
        
        private string toCIPCEmailField;
        
        private string toEmailField;
        
        private string bccEmailField;
        
        private string failureAddressField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string smtpServer {
            get {
                return this.smtpServerField;
            }
            set {
                this.smtpServerField = value;
            }
        }
        
        /// <remarks/>
        public string smtUserPass {
            get {
                return this.smtUserPassField;
            }
            set {
                this.smtUserPassField = value;
            }
        }
        
        /// <remarks/>
        public string fromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        public string toCIPCEmail {
            get {
                return this.toCIPCEmailField;
            }
            set {
                this.toCIPCEmailField = value;
            }
        }
        
        /// <remarks/>
        public string toEmail {
            get {
                return this.toEmailField;
            }
            set {
                this.toEmailField = value;
            }
        }
        
        /// <remarks/>
        public string bccEmail {
            get {
                return this.bccEmailField;
            }
            set {
                this.bccEmailField = value;
            }
        }
        
        /// <remarks/>
        public string failureAddress {
            get {
                return this.failureAddressField;
            }
            set {
                this.failureAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class EmailMessageObject {
        
        private string eML_ToEmailAdminField;
        
        private string eML_ToEmailListField;
        
        private string eML_FromEmailField;
        
        private string eML_SubjectField;
        
        private string eML_MailBodyField;
        
        private string eML_SMTPServerField;
        
        private string eML_SMTPPasswordField;
        
        private string eML_EmailDateField;
        
        private string eML_StatusField;
        
        private string eML_CCEmailField;
        
        private string eML_KeyFieldField;
        
        private string eML_KeyValueField;
        
        private string eML_DomainField;
        
        private string eML_SupportToEmailField;
        
        private string eML_PriorityField;
        
        private string eML_DelayTimeField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string EML_ToEmailAdmin {
            get {
                return this.eML_ToEmailAdminField;
            }
            set {
                this.eML_ToEmailAdminField = value;
            }
        }
        
        /// <remarks/>
        public string EML_ToEmailList {
            get {
                return this.eML_ToEmailListField;
            }
            set {
                this.eML_ToEmailListField = value;
            }
        }
        
        /// <remarks/>
        public string EML_FromEmail {
            get {
                return this.eML_FromEmailField;
            }
            set {
                this.eML_FromEmailField = value;
            }
        }
        
        /// <remarks/>
        public string EML_Subject {
            get {
                return this.eML_SubjectField;
            }
            set {
                this.eML_SubjectField = value;
            }
        }
        
        /// <remarks/>
        public string EML_MailBody {
            get {
                return this.eML_MailBodyField;
            }
            set {
                this.eML_MailBodyField = value;
            }
        }
        
        /// <remarks/>
        public string EML_SMTPServer {
            get {
                return this.eML_SMTPServerField;
            }
            set {
                this.eML_SMTPServerField = value;
            }
        }
        
        /// <remarks/>
        public string EML_SMTPPassword {
            get {
                return this.eML_SMTPPasswordField;
            }
            set {
                this.eML_SMTPPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string EML_EmailDate {
            get {
                return this.eML_EmailDateField;
            }
            set {
                this.eML_EmailDateField = value;
            }
        }
        
        /// <remarks/>
        public string EML_Status {
            get {
                return this.eML_StatusField;
            }
            set {
                this.eML_StatusField = value;
            }
        }
        
        /// <remarks/>
        public string EML_CCEmail {
            get {
                return this.eML_CCEmailField;
            }
            set {
                this.eML_CCEmailField = value;
            }
        }
        
        /// <remarks/>
        public string EML_KeyField {
            get {
                return this.eML_KeyFieldField;
            }
            set {
                this.eML_KeyFieldField = value;
            }
        }
        
        /// <remarks/>
        public string EML_KeyValue {
            get {
                return this.eML_KeyValueField;
            }
            set {
                this.eML_KeyValueField = value;
            }
        }
        
        /// <remarks/>
        public string EML_Domain {
            get {
                return this.eML_DomainField;
            }
            set {
                this.eML_DomainField = value;
            }
        }
        
        /// <remarks/>
        public string EML_SupportToEmail {
            get {
                return this.eML_SupportToEmailField;
            }
            set {
                this.eML_SupportToEmailField = value;
            }
        }
        
        /// <remarks/>
        public string EML_Priority {
            get {
                return this.eML_PriorityField;
            }
            set {
                this.eML_PriorityField = value;
            }
        }
        
        /// <remarks/>
        public string EML_DelayTime {
            get {
                return this.eML_DelayTimeField;
            }
            set {
                this.eML_DelayTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class UserLogObject {
        
        private int uslPKIDField;
        
        private int usrPKIDField;
        
        private int ustPKIDField;
        
        private int ussPKIDField;
        
        private int ldsPKIDField;
        
        private string uslSessionIDField;
        
        private string ipAddressField;
        
        private string deviceNameField;
        
        private string errorDescriptionField;
        
        private System.DateTime uslDateTimeField;
        
        private string uslUserIdentifierField;
        
        private string uslEncryptedCodeField;
        
        /// <remarks/>
        public int uslPKID {
            get {
                return this.uslPKIDField;
            }
            set {
                this.uslPKIDField = value;
            }
        }
        
        /// <remarks/>
        public int usrPKID {
            get {
                return this.usrPKIDField;
            }
            set {
                this.usrPKIDField = value;
            }
        }
        
        /// <remarks/>
        public int ustPKID {
            get {
                return this.ustPKIDField;
            }
            set {
                this.ustPKIDField = value;
            }
        }
        
        /// <remarks/>
        public int ussPKID {
            get {
                return this.ussPKIDField;
            }
            set {
                this.ussPKIDField = value;
            }
        }
        
        /// <remarks/>
        public int ldsPKID {
            get {
                return this.ldsPKIDField;
            }
            set {
                this.ldsPKIDField = value;
            }
        }
        
        /// <remarks/>
        public string uslSessionID {
            get {
                return this.uslSessionIDField;
            }
            set {
                this.uslSessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string errorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime uslDateTime {
            get {
                return this.uslDateTimeField;
            }
            set {
                this.uslDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string uslUserIdentifier {
            get {
                return this.uslUserIdentifierField;
            }
            set {
                this.uslUserIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string uslEncryptedCode {
            get {
                return this.uslEncryptedCodeField;
            }
            set {
                this.uslEncryptedCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class cbrsErrorLogObject {
        
        private int eRL_PKIDField;
        
        private int uSR_PKIDField;
        
        private string eRL_PageNameField;
        
        private string eRL_MethodNameField;
        
        private string eRL_ErrorDecsriptionField;
        
        private string eRL_DateTimeField;
        
        private string eRL_UserIdentifierField;
        
        private string eRL_RecordIdentifierField;
        
        private string eRL_EncryptedCodeField;
        
        /// <remarks/>
        public int ERL_PKID {
            get {
                return this.eRL_PKIDField;
            }
            set {
                this.eRL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int USR_PKID {
            get {
                return this.uSR_PKIDField;
            }
            set {
                this.uSR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_PageName {
            get {
                return this.eRL_PageNameField;
            }
            set {
                this.eRL_PageNameField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_MethodName {
            get {
                return this.eRL_MethodNameField;
            }
            set {
                this.eRL_MethodNameField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_ErrorDecsription {
            get {
                return this.eRL_ErrorDecsriptionField;
            }
            set {
                this.eRL_ErrorDecsriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_DateTime {
            get {
                return this.eRL_DateTimeField;
            }
            set {
                this.eRL_DateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_UserIdentifier {
            get {
                return this.eRL_UserIdentifierField;
            }
            set {
                this.eRL_UserIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_RecordIdentifier {
            get {
                return this.eRL_RecordIdentifierField;
            }
            set {
                this.eRL_RecordIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string ERL_EncryptedCode {
            get {
                return this.eRL_EncryptedCodeField;
            }
            set {
                this.eRL_EncryptedCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class cbrsApprovalDetailObject {
        
        private int aPR_PKIDField;
        
        private int cUS_PKIDField;
        
        private int oFC_PKIDField;
        
        private int aPS_PKIDField;
        
        private int aPR_LevelField;
        
        private string aPR_ApprovedAmountField;
        
        private string maximumAmountField;
        
        private string aPR_DateApprovedField;
        
        private string aPR_CommentsField;
        
        private string cUS_AgentAccountField;
        
        private string tCK_PKIDField;
        
        /// <remarks/>
        public int APR_PKID {
            get {
                return this.aPR_PKIDField;
            }
            set {
                this.aPR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CUS_PKID {
            get {
                return this.cUS_PKIDField;
            }
            set {
                this.cUS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int APS_PKID {
            get {
                return this.aPS_PKIDField;
            }
            set {
                this.aPS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int APR_Level {
            get {
                return this.aPR_LevelField;
            }
            set {
                this.aPR_LevelField = value;
            }
        }
        
        /// <remarks/>
        public string APR_ApprovedAmount {
            get {
                return this.aPR_ApprovedAmountField;
            }
            set {
                this.aPR_ApprovedAmountField = value;
            }
        }
        
        /// <remarks/>
        public string MaximumAmount {
            get {
                return this.maximumAmountField;
            }
            set {
                this.maximumAmountField = value;
            }
        }
        
        /// <remarks/>
        public string APR_DateApproved {
            get {
                return this.aPR_DateApprovedField;
            }
            set {
                this.aPR_DateApprovedField = value;
            }
        }
        
        /// <remarks/>
        public string APR_Comments {
            get {
                return this.aPR_CommentsField;
            }
            set {
                this.aPR_CommentsField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_AgentAccount {
            get {
                return this.cUS_AgentAccountField;
            }
            set {
                this.cUS_AgentAccountField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_PKID {
            get {
                return this.tCK_PKIDField;
            }
            set {
                this.tCK_PKIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class cbrsFlatFileObject {
        
        private int tXF_PKIDField;
        
        private int oFC_PKIDField;
        
        private int tXF_RecordCountField;
        
        private string tXF_FilePathField;
        
        private string tXF_TotalApprovedAmountField;
        
        private string tXF_DateCreatedField;
        
        private int tXF_StatusField;
        
        private string tXF_CommentsField;
        
        /// <remarks/>
        public int TXF_PKID {
            get {
                return this.tXF_PKIDField;
            }
            set {
                this.tXF_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int TXF_RecordCount {
            get {
                return this.tXF_RecordCountField;
            }
            set {
                this.tXF_RecordCountField = value;
            }
        }
        
        /// <remarks/>
        public string TXF_FilePath {
            get {
                return this.tXF_FilePathField;
            }
            set {
                this.tXF_FilePathField = value;
            }
        }
        
        /// <remarks/>
        public string TXF_TotalApprovedAmount {
            get {
                return this.tXF_TotalApprovedAmountField;
            }
            set {
                this.tXF_TotalApprovedAmountField = value;
            }
        }
        
        /// <remarks/>
        public string TXF_DateCreated {
            get {
                return this.tXF_DateCreatedField;
            }
            set {
                this.tXF_DateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public int TXF_Status {
            get {
                return this.tXF_StatusField;
            }
            set {
                this.tXF_StatusField = value;
            }
        }
        
        /// <remarks/>
        public string TXF_Comments {
            get {
                return this.tXF_CommentsField;
            }
            set {
                this.tXF_CommentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class cbrsCustomerDetailObject {
        
        private int cUS_PKIDField;
        
        private int bKN_PKIDField;
        
        private int cTS_PKIDField;
        
        private int uSR_PKIDField;
        
        private string cUS_AgentCodeField;
        
        private string cUS_AgentBalanceField;
        
        private string cUS_IDNumberField;
        
        private string cUS_FullNameField;
        
        private string cUS_BankNameField;
        
        private string cUS_BankBranchCodeField;
        
        private string cUS_AccountHolderNameField;
        
        private string cUS_AccountNumberField;
        
        private string cUS_ContactNumberField;
        
        private string cUS_ERMSStatusField;
        
        private string cUS_DateCreatedField;
        
        private string cUS_DatePaidField;
        
        private bool cUS_IsOldBalanceField;
        
        private string cUS_EmailAddressField;
        
        private fileAttachmentObject[] attachedFilesField;
        
        private bool cUS_FromMobileField;
        
        private bool cUS_IsEncryptedField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int CUS_PKID {
            get {
                return this.cUS_PKIDField;
            }
            set {
                this.cUS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int BKN_PKID {
            get {
                return this.bKN_PKIDField;
            }
            set {
                this.bKN_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CTS_PKID {
            get {
                return this.cTS_PKIDField;
            }
            set {
                this.cTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int USR_PKID {
            get {
                return this.uSR_PKIDField;
            }
            set {
                this.uSR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_AgentCode {
            get {
                return this.cUS_AgentCodeField;
            }
            set {
                this.cUS_AgentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_AgentBalance {
            get {
                return this.cUS_AgentBalanceField;
            }
            set {
                this.cUS_AgentBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_IDNumber {
            get {
                return this.cUS_IDNumberField;
            }
            set {
                this.cUS_IDNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_FullName {
            get {
                return this.cUS_FullNameField;
            }
            set {
                this.cUS_FullNameField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_BankName {
            get {
                return this.cUS_BankNameField;
            }
            set {
                this.cUS_BankNameField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_BankBranchCode {
            get {
                return this.cUS_BankBranchCodeField;
            }
            set {
                this.cUS_BankBranchCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_AccountHolderName {
            get {
                return this.cUS_AccountHolderNameField;
            }
            set {
                this.cUS_AccountHolderNameField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_AccountNumber {
            get {
                return this.cUS_AccountNumberField;
            }
            set {
                this.cUS_AccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_ContactNumber {
            get {
                return this.cUS_ContactNumberField;
            }
            set {
                this.cUS_ContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_ERMSStatus {
            get {
                return this.cUS_ERMSStatusField;
            }
            set {
                this.cUS_ERMSStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_DateCreated {
            get {
                return this.cUS_DateCreatedField;
            }
            set {
                this.cUS_DateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_DatePaid {
            get {
                return this.cUS_DatePaidField;
            }
            set {
                this.cUS_DatePaidField = value;
            }
        }
        
        /// <remarks/>
        public bool CUS_IsOldBalance {
            get {
                return this.cUS_IsOldBalanceField;
            }
            set {
                this.cUS_IsOldBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string CUS_EmailAddress {
            get {
                return this.cUS_EmailAddressField;
            }
            set {
                this.cUS_EmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public fileAttachmentObject[] AttachedFiles {
            get {
                return this.attachedFilesField;
            }
            set {
                this.attachedFilesField = value;
            }
        }
        
        /// <remarks/>
        public bool CUS_FromMobile {
            get {
                return this.cUS_FromMobileField;
            }
            set {
                this.cUS_FromMobileField = value;
            }
        }
        
        /// <remarks/>
        public bool CUS_IsEncrypted {
            get {
                return this.cUS_IsEncryptedField;
            }
            set {
                this.cUS_IsEncryptedField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class fileAttachmentObject {
        
        private int dCM_PKIDField;
        
        private int dCT_PKIDField;
        
        private int dCS_PKIDField;
        
        private int dCL_PKIDField;
        
        private string dCM_DocumentPathField;
        
        private string dCM_OriginalNameField;
        
        private string dCM_DerivedNameField;
        
        private string dCM_ExtentionField;
        
        private int sTS_PKIDField;
        
        private byte[] dCM_FileFieldField;
        
        private int attachmentSizeField;
        
        private string mimeTypeField;
        
        /// <remarks/>
        public int DCM_PKID {
            get {
                return this.dCM_PKIDField;
            }
            set {
                this.dCM_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int DCT_PKID {
            get {
                return this.dCT_PKIDField;
            }
            set {
                this.dCT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int DCS_PKID {
            get {
                return this.dCS_PKIDField;
            }
            set {
                this.dCS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int DCL_PKID {
            get {
                return this.dCL_PKIDField;
            }
            set {
                this.dCL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string DCM_DocumentPath {
            get {
                return this.dCM_DocumentPathField;
            }
            set {
                this.dCM_DocumentPathField = value;
            }
        }
        
        /// <remarks/>
        public string DCM_OriginalName {
            get {
                return this.dCM_OriginalNameField;
            }
            set {
                this.dCM_OriginalNameField = value;
            }
        }
        
        /// <remarks/>
        public string DCM_DerivedName {
            get {
                return this.dCM_DerivedNameField;
            }
            set {
                this.dCM_DerivedNameField = value;
            }
        }
        
        /// <remarks/>
        public string DCM_Extention {
            get {
                return this.dCM_ExtentionField;
            }
            set {
                this.dCM_ExtentionField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DCM_FileField {
            get {
                return this.dCM_FileFieldField;
            }
            set {
                this.dCM_FileFieldField = value;
            }
        }
        
        /// <remarks/>
        public int AttachmentSize {
            get {
                return this.attachmentSizeField;
            }
            set {
                this.attachmentSizeField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class userLogObject {
        
        private int uSL_PKIDField;
        
        private string uSL_DescriptionField;
        
        private int uLT_PKIDField;
        
        private string uSL_DateCreatedField;
        
        private int oFC_PKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int USL_PKID {
            get {
                return this.uSL_PKIDField;
            }
            set {
                this.uSL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string USL_Description {
            get {
                return this.uSL_DescriptionField;
            }
            set {
                this.uSL_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ULT_PKID {
            get {
                return this.uLT_PKIDField;
            }
            set {
                this.uLT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string USL_DateCreated {
            get {
                return this.uSL_DateCreatedField;
            }
            set {
                this.uSL_DateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class resolvingTimeObject {
        
        private int tTR_PKIDField;
        
        private string tTR_TimeToResolveField;
        
        private string tTR_CommentsField;
        
        private string tTR_DescriptionField;
        
        private int sTS_PKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int TTR_PKID {
            get {
                return this.tTR_PKIDField;
            }
            set {
                this.tTR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string TTR_TimeToResolve {
            get {
                return this.tTR_TimeToResolveField;
            }
            set {
                this.tTR_TimeToResolveField = value;
            }
        }
        
        /// <remarks/>
        public string TTR_Comments {
            get {
                return this.tTR_CommentsField;
            }
            set {
                this.tTR_CommentsField = value;
            }
        }
        
        /// <remarks/>
        public string TTR_Description {
            get {
                return this.tTR_DescriptionField;
            }
            set {
                this.tTR_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class problemTypeObject {
        
        private int pTY_PKIDField;
        
        private string pTY_ProblemTypeNameField;
        
        private string pTY_CommentsField;
        
        private string pTY_DescriptionField;
        
        private int sTS_PKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int PTY_PKID {
            get {
                return this.pTY_PKIDField;
            }
            set {
                this.pTY_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string PTY_ProblemTypeName {
            get {
                return this.pTY_ProblemTypeNameField;
            }
            set {
                this.pTY_ProblemTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string PTY_Comments {
            get {
                return this.pTY_CommentsField;
            }
            set {
                this.pTY_CommentsField = value;
            }
        }
        
        /// <remarks/>
        public string PTY_Description {
            get {
                return this.pTY_DescriptionField;
            }
            set {
                this.pTY_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class userOfficeObject {
        
        private int uSG_PKIDField;
        
        private string uSG_UserGroupNameField;
        
        private string uSG_CommentsField;
        
        private string uSG_DescriptionField;
        
        private int sTS_PKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int USG_PKID {
            get {
                return this.uSG_PKIDField;
            }
            set {
                this.uSG_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string USG_UserGroupName {
            get {
                return this.uSG_UserGroupNameField;
            }
            set {
                this.uSG_UserGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string USG_Comments {
            get {
                return this.uSG_CommentsField;
            }
            set {
                this.uSG_CommentsField = value;
            }
        }
        
        /// <remarks/>
        public string USG_Description {
            get {
                return this.uSG_DescriptionField;
            }
            set {
                this.uSG_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class mimeTypeObject {
        
        private int aMT_PKIDField;
        
        private string aMT_NameField;
        
        private string aMT_ExtentionField;
        
        private string aMT_DescriptionField;
        
        private int sTS_PKIDField;
        
        private string aMT_CreatorField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int AMT_PKID {
            get {
                return this.aMT_PKIDField;
            }
            set {
                this.aMT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string AMT_Name {
            get {
                return this.aMT_NameField;
            }
            set {
                this.aMT_NameField = value;
            }
        }
        
        /// <remarks/>
        public string AMT_Extention {
            get {
                return this.aMT_ExtentionField;
            }
            set {
                this.aMT_ExtentionField = value;
            }
        }
        
        /// <remarks/>
        public string AMT_Description {
            get {
                return this.aMT_DescriptionField;
            }
            set {
                this.aMT_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string AMT_Creator {
            get {
                return this.aMT_CreatorField;
            }
            set {
                this.aMT_CreatorField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class escalationListObject {
        
        private int pKIDField;
        
        private int cAT_PKIDField;
        
        private int eSL_PKIDField;
        
        private int oFC_PKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int PKID {
            get {
                return this.pKIDField;
            }
            set {
                this.pKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_PKID {
            get {
                return this.cAT_PKIDField;
            }
            set {
                this.cAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int ESL_PKID {
            get {
                return this.eSL_PKIDField;
            }
            set {
                this.eSL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class categoryObject {
        
        private int cAT_PKIDField;
        
        private int tPT_PKIDField;
        
        private int cTL_PKIDField;
        
        private int sVL_PKIDField;
        
        private int cAT_OrderField;
        
        private int cAT_MasterIDField;
        
        private string cAT_CategoryNameField;
        
        private int sTS_PKIDField;
        
        private bool cAT_RequireAttachmentField;
        
        private bool cAT_VisibleField;
        
        private bool cAT_NotifyEmailField;
        
        private string cAT_CategoryDescriptionField;
        
        private string cAT_ShortNameField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int CAT_PKID {
            get {
                return this.cAT_PKIDField;
            }
            set {
                this.cAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int TPT_PKID {
            get {
                return this.tPT_PKIDField;
            }
            set {
                this.tPT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CTL_PKID {
            get {
                return this.cTL_PKIDField;
            }
            set {
                this.cTL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int SVL_PKID {
            get {
                return this.sVL_PKIDField;
            }
            set {
                this.sVL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_Order {
            get {
                return this.cAT_OrderField;
            }
            set {
                this.cAT_OrderField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_MasterID {
            get {
                return this.cAT_MasterIDField;
            }
            set {
                this.cAT_MasterIDField = value;
            }
        }
        
        /// <remarks/>
        public string CAT_CategoryName {
            get {
                return this.cAT_CategoryNameField;
            }
            set {
                this.cAT_CategoryNameField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CAT_RequireAttachment {
            get {
                return this.cAT_RequireAttachmentField;
            }
            set {
                this.cAT_RequireAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public bool CAT_Visible {
            get {
                return this.cAT_VisibleField;
            }
            set {
                this.cAT_VisibleField = value;
            }
        }
        
        /// <remarks/>
        public bool CAT_NotifyEmail {
            get {
                return this.cAT_NotifyEmailField;
            }
            set {
                this.cAT_NotifyEmailField = value;
            }
        }
        
        /// <remarks/>
        public string CAT_CategoryDescription {
            get {
                return this.cAT_CategoryDescriptionField;
            }
            set {
                this.cAT_CategoryDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CAT_ShortName {
            get {
                return this.cAT_ShortNameField;
            }
            set {
                this.cAT_ShortNameField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class slaObject {
        
        private int sVL_PKIDField;
        
        private int sVL_HoursField;
        
        private string sVL_DescriptionField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int SVL_PKID {
            get {
                return this.sVL_PKIDField;
            }
            set {
                this.sVL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int SVL_Hours {
            get {
                return this.sVL_HoursField;
            }
            set {
                this.sVL_HoursField = value;
            }
        }
        
        /// <remarks/>
        public string SVL_Description {
            get {
                return this.sVL_DescriptionField;
            }
            set {
                this.sVL_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class DeleteResponseObject {
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class templateObject {
        
        private int sTR_PKIDField;
        
        private int cAT_PKIDField;
        
        private string sTR_ResponseTitleField;
        
        private string sTR_ResponseMessageField;
        
        private int sTS_PKIDField;
        
        private int oFC_PKIDField;
        
        private int sTR_DedicatedCAT_PKIDField;
        
        private fileAttachmentObject attachedFileField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int STR_PKID {
            get {
                return this.sTR_PKIDField;
            }
            set {
                this.sTR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_PKID {
            get {
                return this.cAT_PKIDField;
            }
            set {
                this.cAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string STR_ResponseTitle {
            get {
                return this.sTR_ResponseTitleField;
            }
            set {
                this.sTR_ResponseTitleField = value;
            }
        }
        
        /// <remarks/>
        public string STR_ResponseMessage {
            get {
                return this.sTR_ResponseMessageField;
            }
            set {
                this.sTR_ResponseMessageField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int STR_DedicatedCAT_PKID {
            get {
                return this.sTR_DedicatedCAT_PKIDField;
            }
            set {
                this.sTR_DedicatedCAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public fileAttachmentObject AttachedFile {
            get {
                return this.attachedFileField;
            }
            set {
                this.attachedFileField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class lOperationResponse {
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class SelectBoolResponseObject {
        
        private bool selectedPKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool selectedPKID {
            get {
                return this.selectedPKIDField;
            }
            set {
                this.selectedPKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class SelectStringResponseObject {
        
        private string selectedPKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string selectedPKID {
            get {
                return this.selectedPKIDField;
            }
            set {
                this.selectedPKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class organisationObject {
        
        private int oGA_PKIDField;
        
        private string oGA_OrganisationNameField;
        
        private string oGA_AddressLineField;
        
        private string oGA_SurburbField;
        
        private string oGA_CityField;
        
        private string oGA_CountryField;
        
        private string oGA_CodeField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int OGA_PKID {
            get {
                return this.oGA_PKIDField;
            }
            set {
                this.oGA_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string OGA_OrganisationName {
            get {
                return this.oGA_OrganisationNameField;
            }
            set {
                this.oGA_OrganisationNameField = value;
            }
        }
        
        /// <remarks/>
        public string OGA_AddressLine {
            get {
                return this.oGA_AddressLineField;
            }
            set {
                this.oGA_AddressLineField = value;
            }
        }
        
        /// <remarks/>
        public string OGA_Surburb {
            get {
                return this.oGA_SurburbField;
            }
            set {
                this.oGA_SurburbField = value;
            }
        }
        
        /// <remarks/>
        public string OGA_City {
            get {
                return this.oGA_CityField;
            }
            set {
                this.oGA_CityField = value;
            }
        }
        
        /// <remarks/>
        public string OGA_Country {
            get {
                return this.oGA_CountryField;
            }
            set {
                this.oGA_CountryField = value;
            }
        }
        
        /// <remarks/>
        public string OGA_Code {
            get {
                return this.oGA_CodeField;
            }
            set {
                this.oGA_CodeField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class userProfileObject {
        
        private int uSR_PKIDField;
        
        private int uSC_PKIDField;
        
        private int oFL_PKIDField;
        
        private int oDP_PKIDField;
        
        private string uSR_UserLoginField;
        
        private string uSR_PassKeyField;
        
        private string uSR_FullNameField;
        
        private string uSR_IDNumberField;
        
        private string uSR_FirstNameField;
        
        private string uSR_LastNameField;
        
        private string uSR_MobileNumberField;
        
        private string uSR_EmailAccountField;
        
        private string uSR_DateCreatedField;
        
        private string uSR_ActivationDateField;
        
        private string uSR_FaceImageField;
        
        private byte[] uSR_HashedPasswordField;
        
        private string oFC_UniqueIDField;
        
        private int sTS_PKIDField;
        
        private int uSG_PKIDField;
        
        private int oGA_PKIDField;
        
        private string uSR_CommentsField;
        
        private bool oFC_PaginateResultsField;
        
        private string uSR_SalutationField;
        
        private bool oFC_NewTicketEmailField;
        
        private bool oFC_CanEditField;
        
        private bool oFC_HideAssignedField;
        
        private int oFC_IsApproverField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int USR_PKID {
            get {
                return this.uSR_PKIDField;
            }
            set {
                this.uSR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int USC_PKID {
            get {
                return this.uSC_PKIDField;
            }
            set {
                this.uSC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFL_PKID {
            get {
                return this.oFL_PKIDField;
            }
            set {
                this.oFL_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int ODP_PKID {
            get {
                return this.oDP_PKIDField;
            }
            set {
                this.oDP_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string USR_UserLogin {
            get {
                return this.uSR_UserLoginField;
            }
            set {
                this.uSR_UserLoginField = value;
            }
        }
        
        /// <remarks/>
        public string USR_PassKey {
            get {
                return this.uSR_PassKeyField;
            }
            set {
                this.uSR_PassKeyField = value;
            }
        }
        
        /// <remarks/>
        public string USR_FullName {
            get {
                return this.uSR_FullNameField;
            }
            set {
                this.uSR_FullNameField = value;
            }
        }
        
        /// <remarks/>
        public string USR_IDNumber {
            get {
                return this.uSR_IDNumberField;
            }
            set {
                this.uSR_IDNumberField = value;
            }
        }
        
        /// <remarks/>
        public string USR_FirstName {
            get {
                return this.uSR_FirstNameField;
            }
            set {
                this.uSR_FirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string USR_LastName {
            get {
                return this.uSR_LastNameField;
            }
            set {
                this.uSR_LastNameField = value;
            }
        }
        
        /// <remarks/>
        public string USR_MobileNumber {
            get {
                return this.uSR_MobileNumberField;
            }
            set {
                this.uSR_MobileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string USR_EmailAccount {
            get {
                return this.uSR_EmailAccountField;
            }
            set {
                this.uSR_EmailAccountField = value;
            }
        }
        
        /// <remarks/>
        public string USR_DateCreated {
            get {
                return this.uSR_DateCreatedField;
            }
            set {
                this.uSR_DateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string USR_ActivationDate {
            get {
                return this.uSR_ActivationDateField;
            }
            set {
                this.uSR_ActivationDateField = value;
            }
        }
        
        /// <remarks/>
        public string USR_FaceImage {
            get {
                return this.uSR_FaceImageField;
            }
            set {
                this.uSR_FaceImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] USR_HashedPassword {
            get {
                return this.uSR_HashedPasswordField;
            }
            set {
                this.uSR_HashedPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string OFC_UniqueID {
            get {
                return this.oFC_UniqueIDField;
            }
            set {
                this.oFC_UniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int USG_PKID {
            get {
                return this.uSG_PKIDField;
            }
            set {
                this.uSG_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OGA_PKID {
            get {
                return this.oGA_PKIDField;
            }
            set {
                this.oGA_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string USR_Comments {
            get {
                return this.uSR_CommentsField;
            }
            set {
                this.uSR_CommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool OFC_PaginateResults {
            get {
                return this.oFC_PaginateResultsField;
            }
            set {
                this.oFC_PaginateResultsField = value;
            }
        }
        
        /// <remarks/>
        public string USR_Salutation {
            get {
                return this.uSR_SalutationField;
            }
            set {
                this.uSR_SalutationField = value;
            }
        }
        
        /// <remarks/>
        public bool OFC_NewTicketEmail {
            get {
                return this.oFC_NewTicketEmailField;
            }
            set {
                this.oFC_NewTicketEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool OFC_CanEdit {
            get {
                return this.oFC_CanEditField;
            }
            set {
                this.oFC_CanEditField = value;
            }
        }
        
        /// <remarks/>
        public bool OFC_HideAssigned {
            get {
                return this.oFC_HideAssignedField;
            }
            set {
                this.oFC_HideAssignedField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_IsApprover {
            get {
                return this.oFC_IsApproverField;
            }
            set {
                this.oFC_IsApproverField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class faqObject {
        
        private int fAQ_PKIDField;
        
        private int oFC_PKIDField;
        
        private int cAT_PKIDField;
        
        private string fAQ_QuestionNumberField;
        
        private string fAQ_EntryTextField;
        
        private int fAQ_EntryTypeField;
        
        private int sTS_PKIDField;
        
        private string fAQ_CommentField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int FAQ_PKID {
            get {
                return this.fAQ_PKIDField;
            }
            set {
                this.fAQ_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_PKID {
            get {
                return this.cAT_PKIDField;
            }
            set {
                this.cAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string FAQ_QuestionNumber {
            get {
                return this.fAQ_QuestionNumberField;
            }
            set {
                this.fAQ_QuestionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FAQ_EntryText {
            get {
                return this.fAQ_EntryTextField;
            }
            set {
                this.fAQ_EntryTextField = value;
            }
        }
        
        /// <remarks/>
        public int FAQ_EntryType {
            get {
                return this.fAQ_EntryTypeField;
            }
            set {
                this.fAQ_EntryTypeField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string FAQ_Comment {
            get {
                return this.fAQ_CommentField;
            }
            set {
                this.fAQ_CommentField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ticketResponseObject {
        
        private int tKR_PKIDField;
        
        private int tCK_PKIDField;
        
        private int oFC_PKIDField;
        
        private int uST_PKIDField;
        
        private string tKR_ResponseMessageField;
        
        private string tKR_ResponseDateField;
        
        private bool tKR_VisibleToClientField;
        
        private int sTS_PKIDField;
        
        private bool tKR_HasFileField;
        
        private bool tKR_FromMobileField;
        
        private int rST_PKIDField;
        
        private int sTR_PKIDField;
        
        private int cAT_PKIDField;
        
        private fileAttachmentObject attachedFileField;
        
        /// <remarks/>
        public int TKR_PKID {
            get {
                return this.tKR_PKIDField;
            }
            set {
                this.tKR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int TCK_PKID {
            get {
                return this.tCK_PKIDField;
            }
            set {
                this.tCK_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int UST_PKID {
            get {
                return this.uST_PKIDField;
            }
            set {
                this.uST_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string TKR_ResponseMessage {
            get {
                return this.tKR_ResponseMessageField;
            }
            set {
                this.tKR_ResponseMessageField = value;
            }
        }
        
        /// <remarks/>
        public string TKR_ResponseDate {
            get {
                return this.tKR_ResponseDateField;
            }
            set {
                this.tKR_ResponseDateField = value;
            }
        }
        
        /// <remarks/>
        public bool TKR_VisibleToClient {
            get {
                return this.tKR_VisibleToClientField;
            }
            set {
                this.tKR_VisibleToClientField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool TKR_HasFile {
            get {
                return this.tKR_HasFileField;
            }
            set {
                this.tKR_HasFileField = value;
            }
        }
        
        /// <remarks/>
        public bool TKR_FromMobile {
            get {
                return this.tKR_FromMobileField;
            }
            set {
                this.tKR_FromMobileField = value;
            }
        }
        
        /// <remarks/>
        public int RST_PKID {
            get {
                return this.rST_PKIDField;
            }
            set {
                this.rST_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int STR_PKID {
            get {
                return this.sTR_PKIDField;
            }
            set {
                this.sTR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_PKID {
            get {
                return this.cAT_PKIDField;
            }
            set {
                this.cAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public fileAttachmentObject AttachedFile {
            get {
                return this.attachedFileField;
            }
            set {
                this.attachedFileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class InsertResponseObject {
        
        private string insertedPKIDField;
        
        private bool noErrorField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public string insertedPKID {
            get {
                return this.insertedPKIDField;
            }
            set {
                this.insertedPKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool noError {
            get {
                return this.noErrorField;
            }
            set {
                this.noErrorField = value;
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://private.billetterie.sword.za/")]
    public partial class ticketObject {
        
        private int tCK_PKIDField;
        
        private int cAT_PKIDField;
        
        private int uSR_PKIDField;
        
        private int oFC_PKIDField;
        
        private int uST_PKIDField;
        
        private int tPT_PKIDField;
        
        private int tCT_PKIDField;
        
        private string tCK_TicketNumberField;
        
        private string tCK_SubjectField;
        
        private string tCK_MessageField;
        
        private string tCK_AlternateEmailField;
        
        private string tCK_DateCreatedField;
        
        private string tCK_DateClosedField;
        
        private string tCK_DateDueField;
        
        private bool tCK_ViewableField;
        
        private int sTS_PKIDField;
        
        private int pTY_PKIDField;
        
        private string tCK_ReferenceField;
        
        private bool tCK_HasFileField;
        
        private bool tCK_FromMobileField;
        
        private bool cAT_RequireAttachmentField;
        
        private int pRV_PKIDField;
        
        private bool tCK_IsLogField;
        
        private string sTR_PKIDField;
        
        private string tCK_CaseIdentifierField;
        
        private string cAT_ForcedFieldIDField;
        
        private int tCK_CreatorField;
        
        private fileAttachmentObject attachedFileField;
        
        private fileAttachmentObject[] attachedFilesField;
        
        /// <remarks/>
        public int TCK_PKID {
            get {
                return this.tCK_PKIDField;
            }
            set {
                this.tCK_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int CAT_PKID {
            get {
                return this.cAT_PKIDField;
            }
            set {
                this.cAT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int USR_PKID {
            get {
                return this.uSR_PKIDField;
            }
            set {
                this.uSR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int OFC_PKID {
            get {
                return this.oFC_PKIDField;
            }
            set {
                this.oFC_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int UST_PKID {
            get {
                return this.uST_PKIDField;
            }
            set {
                this.uST_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int TPT_PKID {
            get {
                return this.tPT_PKIDField;
            }
            set {
                this.tPT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int TCT_PKID {
            get {
                return this.tCT_PKIDField;
            }
            set {
                this.tCT_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_TicketNumber {
            get {
                return this.tCK_TicketNumberField;
            }
            set {
                this.tCK_TicketNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_Subject {
            get {
                return this.tCK_SubjectField;
            }
            set {
                this.tCK_SubjectField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_Message {
            get {
                return this.tCK_MessageField;
            }
            set {
                this.tCK_MessageField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_AlternateEmail {
            get {
                return this.tCK_AlternateEmailField;
            }
            set {
                this.tCK_AlternateEmailField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_DateCreated {
            get {
                return this.tCK_DateCreatedField;
            }
            set {
                this.tCK_DateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_DateClosed {
            get {
                return this.tCK_DateClosedField;
            }
            set {
                this.tCK_DateClosedField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_DateDue {
            get {
                return this.tCK_DateDueField;
            }
            set {
                this.tCK_DateDueField = value;
            }
        }
        
        /// <remarks/>
        public bool TCK_Viewable {
            get {
                return this.tCK_ViewableField;
            }
            set {
                this.tCK_ViewableField = value;
            }
        }
        
        /// <remarks/>
        public int STS_PKID {
            get {
                return this.sTS_PKIDField;
            }
            set {
                this.sTS_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public int PTY_PKID {
            get {
                return this.pTY_PKIDField;
            }
            set {
                this.pTY_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_Reference {
            get {
                return this.tCK_ReferenceField;
            }
            set {
                this.tCK_ReferenceField = value;
            }
        }
        
        /// <remarks/>
        public bool TCK_HasFile {
            get {
                return this.tCK_HasFileField;
            }
            set {
                this.tCK_HasFileField = value;
            }
        }
        
        /// <remarks/>
        public bool TCK_FromMobile {
            get {
                return this.tCK_FromMobileField;
            }
            set {
                this.tCK_FromMobileField = value;
            }
        }
        
        /// <remarks/>
        public bool CAT_RequireAttachment {
            get {
                return this.cAT_RequireAttachmentField;
            }
            set {
                this.cAT_RequireAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public int PRV_PKID {
            get {
                return this.pRV_PKIDField;
            }
            set {
                this.pRV_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public bool TCK_IsLog {
            get {
                return this.tCK_IsLogField;
            }
            set {
                this.tCK_IsLogField = value;
            }
        }
        
        /// <remarks/>
        public string STR_PKID {
            get {
                return this.sTR_PKIDField;
            }
            set {
                this.sTR_PKIDField = value;
            }
        }
        
        /// <remarks/>
        public string TCK_CaseIdentifier {
            get {
                return this.tCK_CaseIdentifierField;
            }
            set {
                this.tCK_CaseIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string CAT_ForcedFieldID {
            get {
                return this.cAT_ForcedFieldIDField;
            }
            set {
                this.cAT_ForcedFieldIDField = value;
            }
        }
        
        /// <remarks/>
        public int TCK_Creator {
            get {
                return this.tCK_CreatorField;
            }
            set {
                this.tCK_CreatorField = value;
            }
        }
        
        /// <remarks/>
        public fileAttachmentObject AttachedFile {
            get {
                return this.attachedFileField;
            }
            set {
                this.attachedFileField = value;
            }
        }
        
        /// <remarks/>
        public fileAttachmentObject[] AttachedFiles {
            get {
                return this.attachedFilesField;
            }
            set {
                this.attachedFilesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieTicketRecordCompletedEventHandler(object sender, InsertBilletterieTicketRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieTicketRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieTicketRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddTicketResponseDocumentCompletedEventHandler(object sender, AddTicketResponseDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTicketResponseDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTicketResponseDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCategoryDatasetCompletedEventHandler(object sender, GetCategoryDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAllowedMimeTypesDatasetCompletedEventHandler(object sender, GetAllowedMimeTypesDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllowedMimeTypesDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllowedMimeTypesDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCategoryAttachmentRequirementCompletedEventHandler(object sender, GetCategoryAttachmentRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryAttachmentRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryAttachmentRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetProvinceDatasetCompletedEventHandler(object sender, GetProvinceDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProvinceDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProvinceDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieUSERRPKIDCompletedEventHandler(object sender, GetBilletterieUSERRPKIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieUSERRPKIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieUSERRPKIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserTicketsDatasetCompletedEventHandler(object sender, GetUserTicketsDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTicketsDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTicketsDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidMimeTypeCompletedEventHandler(object sender, ValidMimeTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidMimeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidMimeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTicketDatasetCompletedEventHandler(object sender, GetTicketDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTicketResponseDatasetCompletedEventHandler(object sender, GetTicketResponseDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketResponseDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketResponseDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTicketResponseCountCompletedEventHandler(object sender, GetTicketResponseCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketResponseCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketResponseCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTicketDocumentsDatasetCompletedEventHandler(object sender, GetTicketDocumentsDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketDocumentsDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketDocumentsDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CloseTicketCompletedEventHandler(object sender, CloseTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RejectTicketResponseCompletedEventHandler(object sender, RejectTicketResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectTicketResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectTicketResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTicketCompletedEventHandler(object sender, DeleteTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieDataSetCompletedEventHandler(object sender, GetBilletterieDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieRecordCompletedEventHandler(object sender, UpdateBilletterieRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieOfficerObjectCompletedEventHandler(object sender, GetBilletterieOfficerObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieOfficerObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieOfficerObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieUserObjectCompletedEventHandler(object sender, GetBilletterieUserObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieUserObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieUserObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieOfficerObjectIDCompletedEventHandler(object sender, GetBilletterieOfficerObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieOfficerObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieOfficerObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieOfficerUsernameCompletedEventHandler(object sender, GetBilletterieOfficerUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieOfficerUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieOfficerUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieFAQRecordCompletedEventHandler(object sender, InsertBilletterieFAQRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieFAQRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieFAQRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieUserRecordCompletedEventHandler(object sender, InsertBilletterieUserRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieUserRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieUserRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieOrganisationRecordCompletedEventHandler(object sender, InsertBilletterieOrganisationRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieOrganisationRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieOrganisationRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieScalarCompletedEventHandler(object sender, GetBilletterieScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectStringResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectStringResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ClientBankingDetailsExistCompletedEventHandler(object sender, ClientBankingDetailsExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientBankingDetailsExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientBankingDetailsExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectBoolResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectBoolResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCBRSDataSetCompletedEventHandler(object sender, GetCBRSDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBRSDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBRSDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserIDFromTicketCompletedEventHandler(object sender, GetUserIDFromTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDFromTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIDFromTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieIntScalarCompletedEventHandler(object sender, GetBilletterieIntScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieIntScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieIntScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectStringResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectStringResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBilletterieTempDocumentCompletedEventHandler(object sender, AddBilletterieTempDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBilletterieTempDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBilletterieTempDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieTemporaryDocumentsCompletedEventHandler(object sender, GetBilletterieTemporaryDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieTemporaryDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieTemporaryDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieDocumentRecordCompletedEventHandler(object sender, InsertBilletterieDocumentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieDocumentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieDocumentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieGenericRecordCompletedEventHandler(object sender, InsertBilletterieGenericRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieGenericRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieGenericRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public lOperationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((lOperationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieSTRRecordCompletedEventHandler(object sender, InsertBilletterieSTRRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieSTRRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieSTRRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieDocumentRecordCompletedEventHandler(object sender, UpdateBilletterieDocumentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieDocumentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieDocumentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieTicketRecordCompletedEventHandler(object sender, UpdateBilletterieTicketRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieTicketRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieTicketRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieUserRecordCompletedEventHandler(object sender, UpdateBilletterieUserRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieUserRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieUserRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieOfficerRecordCompletedEventHandler(object sender, InsertBilletterieOfficerRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieOfficerRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieOfficerRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieOfficerRecordCompletedEventHandler(object sender, UpdateBilletterieOfficerRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieOfficerRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieOfficerRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieTempDocumentURLCompletedEventHandler(object sender, GetBilletterieTempDocumentURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieTempDocumentURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieTempDocumentURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteBilletterieSingleTempDocumentsCompletedEventHandler(object sender, DeleteBilletterieSingleTempDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBilletterieSingleTempDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBilletterieSingleTempDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieGenericDataTableCompletedEventHandler(object sender, GetBilletterieGenericDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieGenericDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieGenericDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGenericBilletterieDataSetAsynchCompletedEventHandler(object sender, GetGenericBilletterieDataSetAsynchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGenericBilletterieDataSetAsynchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGenericBilletterieDataSetAsynchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieOFCCATRecordCompletedEventHandler(object sender, InsertBilletterieOFCCATRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieOFCCATRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieOFCCATRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieCATOFLOFCRecordCompletedEventHandler(object sender, InsertBilletterieCATOFLOFCRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieCATOFLOFCRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieCATOFLOFCRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGenericBilletterieRecordCompletedEventHandler(object sender, DeleteGenericBilletterieRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGenericBilletterieRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGenericBilletterieRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieSLARecordCompletedEventHandler(object sender, InsertBilletterieSLARecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieSLARecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieSLARecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieCategoryRecordCompletedEventHandler(object sender, UpdateBilletterieCategoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieCategoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieCategoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieEscalationRecordCompletedEventHandler(object sender, InsertBilletterieEscalationRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieEscalationRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieEscalationRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieCategoryRecordCompletedEventHandler(object sender, InsertBilletterieCategoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieCategoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieCategoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieSTRRecordCompletedEventHandler(object sender, UpdateBilletterieSTRRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieSTRRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieSTRRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieAMTRecordCompletedEventHandler(object sender, InsertBilletterieAMTRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieAMTRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieAMTRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieAMTRecordCompletedEventHandler(object sender, UpdateBilletterieAMTRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieAMTRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieAMTRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieUSGRecordCompletedEventHandler(object sender, InsertBilletterieUSGRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieUSGRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieUSGRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieUSGRecordCompletedEventHandler(object sender, UpdateBilletterieUSGRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieUSGRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieUSGRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletteriePTYRecordCompletedEventHandler(object sender, InsertBilletteriePTYRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletteriePTYRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletteriePTYRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletteriePTYRecordCompletedEventHandler(object sender, UpdateBilletteriePTYRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletteriePTYRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletteriePTYRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieTTRRecordCompletedEventHandler(object sender, InsertBilletterieTTRRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieTTRRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieTTRRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieTTRRecordCompletedEventHandler(object sender, UpdateBilletterieTTRRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieTTRRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieTTRRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetGenericIPOnlineDataSetCompletedEventHandler(object sender, GetGenericIPOnlineDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGenericIPOnlineDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGenericIPOnlineDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieNoPasswordUserObjectCompletedEventHandler(object sender, GetBilletterieNoPasswordUserObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieNoPasswordUserObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieNoPasswordUserObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieCategoryScalarCompletedEventHandler(object sender, GetBilletterieCategoryScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieCategoryScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieCategoryScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectStringResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectStringResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieTicketResponseRecordCompletedEventHandler(object sender, InsertBilletterieTicketResponseRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieTicketResponseRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieTicketResponseRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieGenericBoolScalarCompletedEventHandler(object sender, GetBilletterieGenericBoolScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieGenericBoolScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieGenericBoolScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SelectBoolResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SelectBoolResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertTicketInformationRecordCompletedEventHandler(object sender, InsertTicketInformationRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTicketInformationRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTicketInformationRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieOfficerRecordACompletedEventHandler(object sender, UpdateBilletterieOfficerRecordACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieOfficerRecordACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieOfficerRecordACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieOfficerRecordBCompletedEventHandler(object sender, UpdateBilletterieOfficerRecordBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieOfficerRecordBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieOfficerRecordBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertBilletterieUserLogRecordCompletedEventHandler(object sender, InsertBilletterieUserLogRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBilletterieUserLogRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBilletterieUserLogRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieBulkTicketStatusCompletedEventHandler(object sender, UpdateBilletterieBulkTicketStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieBulkTicketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieBulkTicketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieTicketStatusCompletedEventHandler(object sender, UpdateBilletterieTicketStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieTicketStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieTicketStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmailAccountCompletedEventHandler(object sender, GetEmailAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAllTempDocumentsCompletedEventHandler(object sender, DeleteAllTempDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllTempDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllTempDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLocalFileSystemDocumentCompletedEventHandler(object sender, GetLocalFileSystemDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalFileSystemDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalFileSystemDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieLoginCountCompletedEventHandler(object sender, GetBilletterieLoginCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieLoginCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieLoginCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IncreaseBilletterieUserLoginCountCompletedEventHandler(object sender, IncreaseBilletterieUserLoginCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncreaseBilletterieUserLoginCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncreaseBilletterieUserLoginCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieUserStatusCompletedEventHandler(object sender, UpdateBilletterieUserStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieUserStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieUserStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateOTPValueCompletedEventHandler(object sender, CreateOTPValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOTPValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOTPValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserOTPValueCompletedEventHandler(object sender, GetUserOTPValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserOTPValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserOTPValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ResetBilletterieUserLoginCountCompletedEventHandler(object sender, ResetBilletterieUserLoginCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetBilletterieUserLoginCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetBilletterieUserLoginCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBilletterieOfficerLoginCountCompletedEventHandler(object sender, GetBilletterieOfficerLoginCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilletterieOfficerLoginCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilletterieOfficerLoginCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IncreaseBilletterieOfficerLoginCountCompletedEventHandler(object sender, IncreaseBilletterieOfficerLoginCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncreaseBilletterieOfficerLoginCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncreaseBilletterieOfficerLoginCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateBilletterieOfficerStatusCompletedEventHandler(object sender, UpdateBilletterieOfficerStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBilletterieOfficerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBilletterieOfficerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ResetBilletterieOfficerLoginCountCompletedEventHandler(object sender, ResetBilletterieOfficerLoginCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetBilletterieOfficerLoginCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetBilletterieOfficerLoginCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BankingDetailsExistCompletedEventHandler(object sender, BankingDetailsExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankingDetailsExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankingDetailsExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void BankingAccountExistCompletedEventHandler(object sender, BankingAccountExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BankingAccountExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BankingAccountExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCBRSTicketPKIDCompletedEventHandler(object sender, GetCBRSTicketPKIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBRSTicketPKIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBRSTicketPKIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSBulkCustomerRecordStatusCompletedEventHandler(object sender, UpdateCBRSBulkCustomerRecordStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSBulkCustomerRecordStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSBulkCustomerRecordStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCustomerDetailRecordCompletedEventHandler(object sender, InsertCustomerDetailRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerDetailRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerDetailRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertCBRSDocumentRecordCompletedEventHandler(object sender, InsertCBRSDocumentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCBRSDocumentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCBRSDocumentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSDocumentRecordCompletedEventHandler(object sender, UpdateCBRSDocumentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSDocumentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSDocumentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSCustomerRecordTicketCompletedEventHandler(object sender, UpdateCBRSCustomerRecordTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSCustomerRecordTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSCustomerRecordTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTemporaryCBRSDocumentsCompletedEventHandler(object sender, GetTemporaryCBRSDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemporaryCBRSDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemporaryCBRSDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddTempCBRSDocumentCompletedEventHandler(object sender, AddTempCBRSDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTempCBRSDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTempCBRSDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTempCBRSDocumentURLCompletedEventHandler(object sender, GetTempCBRSDocumentURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempCBRSDocumentURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempCBRSDocumentURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteSingleCBRSTempDocumentsCompletedEventHandler(object sender, DeleteSingleCBRSTempDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSingleCBRSTempDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSingleCBRSTempDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAllCBRSTempDocumentsCompletedEventHandler(object sender, DeleteAllCBRSTempDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllCBRSTempDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllCBRSTempDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSApprovedBalanceCompletedEventHandler(object sender, UpdateCBRSApprovedBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSApprovedBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSApprovedBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCBRSUserIDDataSetCompletedEventHandler(object sender, GetCBRSUserIDDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBRSUserIDDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBRSUserIDDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCBRSCustomerRefundDataSetCompletedEventHandler(object sender, GetCBRSCustomerRefundDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBRSCustomerRefundDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBRSCustomerRefundDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCBRSCustomerObjectDataSetCompletedEventHandler(object sender, GetCBRSCustomerObjectDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBRSCustomerObjectDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBRSCustomerObjectDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSBulkCustomerTXFRecordStatusCompletedEventHandler(object sender, UpdateCBRSBulkCustomerTXFRecordStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSBulkCustomerTXFRecordStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSBulkCustomerTXFRecordStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSERMSTransIDCompletedEventHandler(object sender, UpdateCBRSERMSTransIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSERMSTransIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSERMSTransIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSERMSReinTransIDCompletedEventHandler(object sender, UpdateCBRSERMSReinTransIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSERMSReinTransIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSERMSReinTransIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateTFXTextFileStatusCompletedEventHandler(object sender, UpdateTFXTextFileStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTFXTextFileStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTFXTextFileStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCBRSTotalBalanceCompletedEventHandler(object sender, GetCBRSTotalBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCBRSTotalBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCBRSTotalBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertFlatfileDetailRecordCompletedEventHandler(object sender, InsertFlatfileDetailRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFlatfileDetailRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFlatfileDetailRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertApprovalDetailRecordCompletedEventHandler(object sender, InsertApprovalDetailRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertApprovalDetailRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertApprovalDetailRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCBRSCustomerRecordStatusCompletedEventHandler(object sender, UpdateCBRSCustomerRecordStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCBRSCustomerRecordStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCBRSCustomerRecordStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertErrorLogRecordCompletedEventHandler(object sender, InsertErrorLogRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertErrorLogRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertErrorLogRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUserLogRecordCompletedEventHandler(object sender, AddUserLogRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserLogRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserLogRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEncryptedValueCompletedEventHandler(object sender, GetEncryptedValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEncryptedValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEncryptedValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDecryptedValueCompletedEventHandler(object sender, GetDecryptedValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDecryptedValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDecryptedValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentCipherKeyCompletedEventHandler(object sender, GetCurrentCipherKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentCipherKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentCipherKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCUBADataSetCompletedEventHandler(object sender, GetCUBADataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCUBADataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCUBADataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOracleDataSetCompletedEventHandler(object sender, GetOracleDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOracleDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOracleDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddEmailRecordCompletedEventHandler(object sender, AddEmailRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmailRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmailRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddEmailRecordSupportCompletedEventHandler(object sender, AddEmailRecordSupportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmailRecordSupportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmailRecordSupportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertResponseObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertResponseObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetQRSEmailSettingsCompletedEventHandler(object sender, GetQRSEmailSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQRSEmailSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQRSEmailSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public smtpSettingsObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((smtpSettingsObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAgentBalanceCompletedEventHandler(object sender, GetAgentBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DoubleObjectResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DoubleObjectResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAgentAccountCompletedEventHandler(object sender, GetAgentAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetERMSAgentProfileCompletedEventHandler(object sender, GetERMSAgentProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetERMSAgentProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetERMSAgentProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ERMSAgentProfileResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ERMSAgentProfileResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentRefCompletedEventHandler(object sender, GetDocumentRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringObjectResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringObjectResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInformixDataSetCompletedEventHandler(object sender, GetInformixDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInformixDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInformixDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InformixDataSetResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InformixDataSetResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckBillingCompletedEventHandler(object sender, CheckBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ERMSBillingOutputResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ERMSBillingOutputResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IPERMSBillingCompletedEventHandler(object sender, IPERMSBillingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPERMSBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IPERMSBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ERMSBillingOutputResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ERMSBillingOutputResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591